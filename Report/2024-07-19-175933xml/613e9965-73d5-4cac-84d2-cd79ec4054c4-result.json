{"name": "节目编排-选节目-删除单个节目", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6515F78A2+54818]\n\t(No symbol) [0x00007FF651566AD2]\n\t(No symbol) [0x00007FF65141DA3B]\n\t(No symbol) [0x00007FF65145E4FC]\n\t(No symbol) [0x00007FF65145E67C]\n\t(No symbol) [0x00007FF651499627]\n\t(No symbol) [0x00007FF65147EAEF]\n\t(No symbol) [0x00007FF6514975A2]\n\t(No symbol) [0x00007FF65147E883]\n\t(No symbol) [0x00007FF651453691]\n\t(No symbol) [0x00007FF6514548D4]\n\tGetHandleVerifier [0x00007FF65195B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6519B1870+3962352]\n\tGetHandleVerifier [0x00007FF6519A9D5F+3930847]\n\tGetHandleVerifier [0x00007FF651693656+693206]\n\t(No symbol) [0x00007FF651571638]\n\t(No symbol) [0x00007FF65156D944]\n\t(No symbol) [0x00007FF65156DA72]\n\t(No symbol) [0x00007FF65155E123]\n\tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\n\tRtlUserThreadStart [0x00007FFBD198AF28+40]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"9ff52122d9f10bd6ce1b407136ab092d\")>\n\n    @pytest.fixture()\n    def generate_program(driver):\n        \"\"\"\n        1、判断素材中心是不是有素材，有就先清空，再上传，再生成节目\n        2、没有就直接上传，再生成节目\n        :return:\n        \"\"\"\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n        media_ids, folder_ids = media_list.get_media_list()\n        programlist = ProgramList()\n        program_names = programlist.get_program_list_names()\n    \n        if program_names == []:\n            if media_ids == []:\n                # 素材上传\n                mediapage.switch_to_media_center()\n>               mediapage.upload_media()\n\ntest_case\\test_release_management.py:83: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:47: in upload_media\n    self.click_up_load()\npageobject\\media_page.py:106: in click_up_load\n    element = wait.until(EC.element_to_be_clickable((By.XPATH, my_element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"9ff52122d9f10bd6ce1b407136ab092d\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002179923F7F0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6515F78A2+54818]\nE       \t(No symbol) [0x00007FF651566AD2]\nE       \t(No symbol) [0x00007FF65141DA3B]\nE       \t(No symbol) [0x00007FF65145E4FC]\nE       \t(No symbol) [0x00007FF65145E67C]\nE       \t(No symbol) [0x00007FF651499627]\nE       \t(No symbol) [0x00007FF65147EAEF]\nE       \t(No symbol) [0x00007FF6514975A2]\nE       \t(No symbol) [0x00007FF65147E883]\nE       \t(No symbol) [0x00007FF651453691]\nE       \t(No symbol) [0x00007FF6514548D4]\nE       \tGetHandleVerifier [0x00007FF65195B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF6519B1870+3962352]\nE       \tGetHandleVerifier [0x00007FF6519A9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF651693656+693206]\nE       \t(No symbol) [0x00007FF651571638]\nE       \t(No symbol) [0x00007FF65156D944]\nE       \t(No symbol) [0x00007FF65156DA72]\nE       \t(No symbol) [0x00007FF65155E123]\nE       \tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\nE       \tRtlUserThreadStart [0x00007FFBD198AF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException"}, "start": 1721383655183, "stop": 1721383655183, "uuid": "cc26d563-1f25-483a-847c-80cfba404257", "historyId": "7a17e3e4f4a1f5edf26c55486f46ad97", "testCaseId": "7a17e3e4f4a1f5edf26c55486f46ad97", "fullName": "test_case.test_release_management.TestReleaseStrategy#test_program_edit_delete_one", "labels": [{"name": "feature", "value": "release management"}, {"name": "epic", "value": "项目hkc"}, {"name": "tag", "value": "run(order=37)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('generate_program')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_release_management"}, {"name": "subSuite", "value": "TestReleaseStrategy"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "31640-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_release_management"}]}