{"name": "取消节目单引用", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class=\"step-name\" and text()=\"选设备\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF68A8278A2+54818]\n\t(No symbol) [0x00007FF68A796AD2]\n\t(No symbol) [0x00007FF68A64DA3B]\n\t(No symbol) [0x00007FF68A68E4FC]\n\t(No symbol) [0x00007FF68A68E67C]\n\t(No symbol) [0x00007FF68A6C9627]\n\t(No symbol) [0x00007FF68A6AEAEF]\n\t(No symbol) [0x00007FF68A6C75A2]\n\t(No symbol) [0x00007FF68A6AE883]\n\t(No symbol) [0x00007FF68A683691]\n\t(No symbol) [0x00007FF68A6848D4]\n\tGetHandleVerifier [0x00007FF68AB8B9A2+3610402]\n\tGetHandleVerifier [0x00007FF68ABE1870+3962352]\n\tGetHandleVerifier [0x00007FF68ABD9D5F+3930847]\n\tGetHandleVerifier [0x00007FF68A8C3656+693206]\n\t(No symbol) [0x00007FF68A7A1638]\n\t(No symbol) [0x00007FF68A79D944]\n\t(No symbol) [0x00007FF68A79DA72]\n\t(No symbol) [0x00007FF68A78E123]\n\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\n\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]", "trace": "driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"31e35d046280776d7d47fbdfedbc745b\")>\nrelease_page = <pageobject.release_page.ReleasePage object at 0x000002F71D21E860>\n\n    @pytest.fixture(scope=\"function\")\n    def generate_one_program(driver,release_page):\n        \"\"\"\n        1、判断素材中心是不是有素材，有就先清空，再上传，再生成节目\n        2、没有就直接上传，再生成节目\n        :return:\n        \"\"\"\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n        media_ids, folder_ids = media_list.get_media_list()\n        programlist = ProgramList()\n        program_names = programlist.get_program_list_names()\n    \n        if program_names == []:\n            if media_ids == []:\n                # 素材上传\n                time.sleep(0.3)\n                mediapage.refresh()\n                mediapage.switch_to_media_center()\n                mediapage.upload_media()\n                time.sleep(2)\n                # 素材发布\n                # media_ids, folder_ids = media_list.get_media_list()\n                mediapage.hover_to_media()\n                mediapage.choose_media()\n                mediapage.multi_release()\n                #选择设备，然后发布节目\n    \n                with step(\"点击选设备\"):\n                    release_page.choose_terminal()\n    \n                with step(\"选择一个设备\"):\n                    # release_page.choose_one_terminal()\n    \n                    # release_page.choose_terminal()\n                    release_page.select_all_terminals()\n                    # release_page.confirm_terminal_button()\n                    # release_page.click_system_icon()\n    \n                    # time.sleep(6)\n                with step(\"选完设备后，点击确定\"):\n                    # release_page.confirm_release_strategy()\n                    release_page.confirm_terminal_button()\n                    release_page.click_system_icon()\n    \n                with step(\"发布普通节目\"):\n                    release_page.release_general_program()\n    \n            else:\n                media_list.delete_all_media()\n                mediapage.switch_to_media_center()\n                mediapage.upload_media()\n                mediapage.hover_to_media()\n                mediapage.choose_media()\n                mediapage.multi_release()\n                with step(\"点击选设备\"):\n                    release_page.choose_terminal()\n    \n                with step(\"选择一个设备\"):\n                    # release_page.choose_one_terminal()\n    \n                    # release_page.choose_terminal()\n                    release_page.select_all_terminals()\n                    # release_page.confirm_terminal_button()\n                    # release_page.click_system_icon()\n    \n                    # time.sleep(6)\n                with step(\"选完设备后，点击确定\"):\n                    # release_page.confirm_release_strategy()\n                    release_page.confirm_terminal_button()\n                    release_page.click_system_icon()\n    \n                with step(\"发布普通节目\"):\n>                   release_page.release_general_program()\n\ntest_case\\test_play_bill.py:188: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\release_page.py:80: in release_general_program\n    clickable_ele = self.get_element('by_xpath,//div[@class=\"step-name\" and text()=\"选设备\"]')\nbasepage\\base_page.py:245: in get_element\n    element = self.driver.find_element(By.XPATH, value=selector_value)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002F71D21E740>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF68A78E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[@class=\"step-name\" and text()=\"选设备\"]\"}\nE         (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF68A8278A2+54818]\nE       \t(No symbol) [0x00007FF68A796AD2]\nE       \t(No symbol) [0x00007FF68A64DA3B]\nE       \t(No symbol) [0x00007FF68A68E4FC]\nE       \t(No symbol) [0x00007FF68A68E67C]\nE       \t(No symbol) [0x00007FF68A6C9627]\nE       \t(No symbol) [0x00007FF68A6AEAEF]\nE       \t(No symbol) [0x00007FF68A6C75A2]\nE       \t(No symbol) [0x00007FF68A6AE883]\nE       \t(No symbol) [0x00007FF68A683691]\nE       \t(No symbol) [0x00007FF68A6848D4]\nE       \tGetHandleVerifier [0x00007FF68AB8B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF68ABE1870+3962352]\nE       \tGetHandleVerifier [0x00007FF68ABD9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF68A8C3656+693206]\nE       \t(No symbol) [0x00007FF68A7A1638]\nE       \t(No symbol) [0x00007FF68A79D944]\nE       \t(No symbol) [0x00007FF68A79DA72]\nE       \t(No symbol) [0x00007FF68A78E123]\nE       \tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\nE       \tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1720073342010, "stop": 1720073342010, "uuid": "fa8d9127-d368-43ee-b386-99cebab53502", "historyId": "7074c31fcf99556d8db8241013a7a305", "testCaseId": "7074c31fcf99556d8db8241013a7a305", "fullName": "test_case.test_play_bill.TestPlayBill#test_cancel_copy_play_bill", "labels": [{"name": "feature", "value": "play bill list"}, {"name": "epic", "value": "项目hkc"}, {"name": "tag", "value": "@pytest.mark.usefixtures('generate_one_program')"}, {"name": "tag", "value": "run(order=2)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_play_bill"}, {"name": "subSuite", "value": "TestPlayBill"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "1808-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_play_bill"}]}