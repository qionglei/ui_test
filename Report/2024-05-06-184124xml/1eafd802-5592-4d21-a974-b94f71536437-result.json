{"name": "发送插播字幕，位置：上", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ED1078A2+54818]\n\t(No symbol) [0x00007FF6ED076AD2]\n\t(No symbol) [0x00007FF6ECF2DA3B]\n\t(No symbol) [0x00007FF6ECF1BA97]\n\t(No symbol) [0x00007FF6ECF1B710]\n\t(No symbol) [0x00007FF6ECF2F931]\n\t(No symbol) [0x00007FF6ECFA6C9F]\n\t(No symbol) [0x00007FF6ECF8E883]\n\t(No symbol) [0x00007FF6ECF63691]\n\t(No symbol) [0x00007FF6ECF648D4]\n\tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\n\tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\n\tGetHandleVerifier [0x00007FF6ED1A3656+693206]\n\t(No symbol) [0x00007FF6ED081638]\n\t(No symbol) [0x00007FF6ED07D944]\n\t(No symbol) [0x00007FF6ED07DA72]\n\t(No symbol) [0x00007FF6ED06E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]", "trace": "self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000020373D78A60>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"发送插播字幕，位置：上\")\n    @pytest.mark.run(order=8)\n    def test_insert_subtitle_up(self):\n        terminal_page = self.terminal_page\n        terminal_page.refresh()\n        random_text = random.randint(999, 9999999999)\n        # sql_execute()\n        with step(\"各种前提：\"):\n            terminal_page.switch_to_terminal_center()\n>           terminal_page.add_real_terminal()\n\ntest_case\\test_terminal_center.py:307: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\terminal_page.py:226: in add_real_terminal\n    self.terminal_org_more()\npageobject\\terminal_page.py:97: in terminal_org_more\n    ActionChains(self.driver).move_to_element(first_terminal_org_more_ele).click(first_terminal_org_more_ele).perform()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py:94: in perform\n    self.w3c_actions.perform()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py:96: in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002031A7F6470>\nresponse = {'status': 500, 'value': '{\"value\":{\"error\":\"disconnected\",\"message\":\"disconnected: not connected to DevTools\\\\n  (fai...07FF6ED06E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\nE         (failed to check if window was closed: disconnected: not connected to DevTools)\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6ED1078A2+54818]\nE       \t(No symbol) [0x00007FF6ED076AD2]\nE       \t(No symbol) [0x00007FF6ECF2DA3B]\nE       \t(No symbol) [0x00007FF6ECF1BA97]\nE       \t(No symbol) [0x00007FF6ECF1B710]\nE       \t(No symbol) [0x00007FF6ECF2F931]\nE       \t(No symbol) [0x00007FF6ECFA6C9F]\nE       \t(No symbol) [0x00007FF6ECF8E883]\nE       \t(No symbol) [0x00007FF6ECF63691]\nE       \t(No symbol) [0x00007FF6ECF648D4]\nE       \tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\nE       \tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF6ED1A3656+693206]\nE       \t(No symbol) [0x00007FF6ED081638]\nE       \t(No symbol) [0x00007FF6ED07D944]\nE       \t(No symbol) [0x00007FF6ED07DA72]\nE       \t(No symbol) [0x00007FF6ED06E123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: WebDriverException"}, "steps": [{"name": "各种前提：", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.WebDriverException: Message: disconnected: not connected to DevTools\n  (failed to check if window was closed: disconnected: not connected to DevTools)\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ED1078A2+54818]\n\t(No symbol) [0x00007FF6ED076AD2]\n\t(No symbol) [0x00007FF6ECF2DA3B]\n\t(No symbol) [0x00007FF6ECF1BA97]\n\t(No symbol) [0x00007FF6ECF1B710]\n\t(No symbol) [0x00007FF6ECF2F931]\n\t(No symbol) [0x00007FF6ECFA6C9F]\n\t(No symbol) [0x00007FF6ECF8E883]\n\t(No symbol) [0x00007FF6ECF63691]\n\t(No symbol) [0x00007FF6ECF648D4]\n\tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\n\tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\n\tGetHandleVerifier [0x00007FF6ED1A3656+693206]\n\t(No symbol) [0x00007FF6ED081638]\n\t(No symbol) [0x00007FF6ED07D944]\n\t(No symbol) [0x00007FF6ED07DA72]\n\t(No symbol) [0x00007FF6ED06E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n", "trace": "  File \"D:\\ui\\test_case\\test_terminal_center.py\", line 307, in test_insert_subtitle_up\n    terminal_page.add_real_terminal()\n  File \"D:\\ui\\pageobject\\terminal_page.py\", line 226, in add_real_terminal\n    self.terminal_org_more()\n  File \"D:\\ui\\pageobject\\terminal_page.py\", line 97, in terminal_org_more\n    ActionChains(self.driver).move_to_element(first_terminal_org_more_ele).click(first_terminal_org_more_ele).perform()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\common\\action_chains.py\", line 94, in perform\n    self.w3c_actions.perform()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\common\\actions\\action_builder.py\", line 96, in perform\n    self.driver.execute(Command.W3C_ACTIONS, enc)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1714992916939, "stop": 1714992927132}], "start": 1714992916872, "stop": 1714992927132, "uuid": "5496e1e3-4344-4d1c-9afc-e9aa7321db3b", "historyId": "8b3c67f03b5dbe22cdee8960169c3d4a", "testCaseId": "8b3c67f03b5dbe22cdee8960169c3d4a", "fullName": "test_case.test_terminal_center.TestTerminalCenter#test_insert_subtitle_up", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "terminal_center"}, {"name": "tag", "value": "run(order=8)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('clear_terminal_list')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_terminal_center"}, {"name": "subSuite", "value": "TestTerminalCenter"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "26752-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_terminal_center"}]}