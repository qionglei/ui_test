{"name": "发送插播字幕，位置：中", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range", "trace": "self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000027612295D50>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"发送插播字幕，位置：中\")\n    @pytest.mark.run(order=7)\n    def test_insert_subtitle_median(self):\n        terminal_page = self.terminal_page\n        terminal_page.refresh()\n        text = random.randint(999, 9999999999)\n        # sql_execute()\n        with step(\"各种前提：\"):\n            terminal_page.switch_to_terminal_center()\n>           terminal_page.add_real_terminal()\n\ntest_case\\test_terminal_center.py:273: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\terminal_page.py:210: in add_real_terminal\n    self.select_terminal_org()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageobject.terminal_page.TerminalPage object at 0x000002763A97CA00>\n\n    def select_terminal_org(self):\n        time.sleep(0.5)\n        clickable_locators = ('by_xpath,//label[@class=\"el-radio\"]')\n        # clickable_eles = self.get_elements(clickable_locator)\n        # clickable_ele = clickable_eles[0]\n        # ActionChains(self.driver).move_to_element(clickable_ele).click(clickable_ele).click()\n        clickable_eles = self.get_elements(clickable_locators)\n>       first_clickable_ele = clickable_eles[0]\nE       IndexError: list index out of range\n\npageobject\\terminal_page.py:106: IndexError"}, "steps": [{"name": "各种前提：", "status": "broken", "statusDetails": {"message": "IndexError: list index out of range\n", "trace": "  File \"D:\\ui\\test_case\\test_terminal_center.py\", line 273, in test_insert_subtitle_median\n    terminal_page.add_real_terminal()\n  File \"D:\\ui\\pageobject\\terminal_page.py\", line 210, in add_real_terminal\n    self.select_terminal_org()\n  File \"D:\\ui\\pageobject\\terminal_page.py\", line 106, in select_terminal_org\n    first_clickable_ele = clickable_eles[0]\n"}, "start": 1714465174989, "stop": 1714465211098}], "start": 1714465174942, "stop": 1714465211098, "uuid": "c8c1ff75-8c32-4633-9929-4ac795c1f884", "historyId": "71cd25da1c270ab31fc16121c17baebc", "testCaseId": "71cd25da1c270ab31fc16121c17baebc", "fullName": "test_case.test_terminal_center.TestTerminalCenter#test_insert_subtitle_median", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "terminal_center"}, {"name": "tag", "value": "run(order=7)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('clear_terminal_list')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_terminal_center"}, {"name": "subSuite", "value": "TestTerminalCenter"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "24664-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_terminal_center"}]}