{"uid":"31b0395bfc117d65","name":"新增一个竖屏的联屏节目","fullName":"test_case.test_program_management.TestProgramManagement#test_create_relevance_program_hard","historyId":"eb851a59db0459b9a60a4a7b03a2ee85","time":{"start":1715080302791,"stop":1715080311606,"duration":8815},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"self = <test_case.test_program_management.TestProgramManagement object at 0x000002607077A1A0>\n\n    @allure.title(\"新增一个竖屏的联屏节目\")\n    @pytest.mark.run(order=7)\n    def test_create_relevance_program_hard(self):\n        program_page = self.program_page\n        program_page.refresh()\n        # 联屏节目随机名称\n        ran_int = random.randint(100, 999)\n        relevance_program_name = \"test_联屏竖屏_\" + str(ran_int)\n    \n        # 行、列随机\n        randow_row = str(random.randint(1, 5))\n        randow_col = str(random.randint(1, 4))\n        with step(\"点击创建节目\"):\n            program_page.switch_to_program_management()\n            program_page.click_create_program()\n    \n        with step(\"切换到联屏节目tab上\"):\n            program_page.relevance_program_tab()\n    \n        with step(\"输入联屏节目的节目名称\"):\n            program_page.input_program_name(relevance_program_name)\n    \n        with step(\"输入屏幕组合行和列值\"):\n            # time.sleep(5)\n            program_page.row_numbers(randow_row)\n            time.sleep(0.5)\n            program_page.col_numbers(randow_col)\n    \n        with step(\"切换到竖屏tab上\"):\n            program_page.screen_direction(\"y\")\n    \n        time.sleep(2)\n        with step(\"创建联屏节目，点击选择素材\"):\n            program_page.choose_relevance_media()\n    \n        win_size = program_page.get_window_size()\n        program_page.maxsize_window()\n    \n        #先判断是不是有素材：\n        media_List = MediaList()\n>       list_media = media_List.get_media_list()\n\ntest_case\\test_program_management.py:238: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.set_up_media_list.MediaList object at 0x000002607FBFA1A0>\n\n    def get_media_list(self):\n        cookie = self.cookie\n        headers = self.headers\n    \n        host = \"https://test.hkciot.com\"\n        base_url = \"/cuteview/media/getInPage\"\n        media_url = host + base_url\n        body = {\n            \"cropId\": \"1751805517940535298\",\n            \"folderId\": \"0\",\n            \"mediaId\": \"\",\n            \"orgId\": \"1751805517940535299\",\n            \"secType\": \"\",\n            \"name\": \"\",\n            \"tagIds\": [],\n            \"type\": \"\",\n            \"pageIndex\": 1,\n            \"pageSize\": 10\n        }\n    \n        response = requests.post(url=media_url, headers=headers, data=json.dumps(body))\n        res = response.json()\n    \n>       media_ids = [media['id'] for media in res['data']['mediaFormatDtoList']]\nE       TypeError: 'NoneType' object is not iterable\n\ncommon\\set_up_media_list.py:39: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1715079562159,"stop":1715079562165,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1715079562165,"stop":1715079578184,"duration":16019},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"program_page","time":{"start":1715080301866,"stop":1715080301866,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"program_management_set_up","time":{"start":1715080301866,"stop":1715080302791,"duration":925},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"self = <test_case.test_program_management.TestProgramManagement object at 0x000002607077A1A0>\n\n    @allure.title(\"新增一个竖屏的联屏节目\")\n    @pytest.mark.run(order=7)\n    def test_create_relevance_program_hard(self):\n        program_page = self.program_page\n        program_page.refresh()\n        # 联屏节目随机名称\n        ran_int = random.randint(100, 999)\n        relevance_program_name = \"test_联屏竖屏_\" + str(ran_int)\n    \n        # 行、列随机\n        randow_row = str(random.randint(1, 5))\n        randow_col = str(random.randint(1, 4))\n        with step(\"点击创建节目\"):\n            program_page.switch_to_program_management()\n            program_page.click_create_program()\n    \n        with step(\"切换到联屏节目tab上\"):\n            program_page.relevance_program_tab()\n    \n        with step(\"输入联屏节目的节目名称\"):\n            program_page.input_program_name(relevance_program_name)\n    \n        with step(\"输入屏幕组合行和列值\"):\n            # time.sleep(5)\n            program_page.row_numbers(randow_row)\n            time.sleep(0.5)\n            program_page.col_numbers(randow_col)\n    \n        with step(\"切换到竖屏tab上\"):\n            program_page.screen_direction(\"y\")\n    \n        time.sleep(2)\n        with step(\"创建联屏节目，点击选择素材\"):\n            program_page.choose_relevance_media()\n    \n        win_size = program_page.get_window_size()\n        program_page.maxsize_window()\n    \n        #先判断是不是有素材：\n        media_List = MediaList()\n>       list_media = media_List.get_media_list()\n\ntest_case\\test_program_management.py:238: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.set_up_media_list.MediaList object at 0x000002607FBFA1A0>\n\n    def get_media_list(self):\n        cookie = self.cookie\n        headers = self.headers\n    \n        host = \"https://test.hkciot.com\"\n        base_url = \"/cuteview/media/getInPage\"\n        media_url = host + base_url\n        body = {\n            \"cropId\": \"1751805517940535298\",\n            \"folderId\": \"0\",\n            \"mediaId\": \"\",\n            \"orgId\": \"1751805517940535299\",\n            \"secType\": \"\",\n            \"name\": \"\",\n            \"tagIds\": [],\n            \"type\": \"\",\n            \"pageIndex\": 1,\n            \"pageSize\": 10\n        }\n    \n        response = requests.post(url=media_url, headers=headers, data=json.dumps(body))\n        res = response.json()\n    \n>       media_ids = [media['id'] for media in res['data']['mediaFormatDtoList']]\nE       TypeError: 'NoneType' object is not iterable\n\ncommon\\set_up_media_list.py:39: TypeError","steps":[{"name":"点击创建节目","time":{"start":1715080303226,"stop":1715080305065,"duration":1839},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"切换到联屏节目tab上","time":{"start":1715080305065,"stop":1715080305684,"duration":619},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入联屏节目的节目名称","time":{"start":1715080305684,"stop":1715080306379,"duration":695},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入屏幕组合行和列值","time":{"start":1715080306379,"stop":1715080308251,"duration":1872},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"切换到竖屏tab上","time":{"start":1715080308253,"stop":1715080308851,"duration":598},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"创建联屏节目，点击选择素材","time":{"start":1715080310858,"stop":1715080311477,"duration":619},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":6},"afterStages":[{"name":"program_page::0","time":{"start":1715080311662,"stop":1715080311662,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1715081342948,"stop":1715081345588,"duration":2640},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"labels":[{"name":"feature","value":"program management"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"run(order=7)"},{"name":"tag","value":"@pytest.mark.usefixtures('program_management_set_up')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_program_management"},{"name":"subSuite","value":"TestProgramManagement"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"32024-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_program_management"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=7)","@pytest.mark.usefixtures('program_management_set_up')"]},"source":"31b0395bfc117d65.json","parameterValues":[]}