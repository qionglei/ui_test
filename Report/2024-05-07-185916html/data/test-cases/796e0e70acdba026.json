{"uid":"796e0e70acdba026","name":"取消删除节目单","fullName":"test_case.test_play_bill.TestPlayBill#test_cancel_delete_play_bill","historyId":"1295b78cbdeb504c275ce1c84c02ffc4","time":{"start":1715080502928,"stop":1715080502928,"duration":0},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"2ac031d8aae069bd790e7bbb555640df\")>\n\n    @pytest.fixture()\n    def generate_one_program(driver):\n        \"\"\"\n        1、判断素材中心是不是有素材，有就先清空，再上传，再生成节目\n        2、没有就直接上传，再生成节目\n        :return:\n        \"\"\"\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n>       media_ids = media_list.get_media_list()\n\ntest_case\\test_play_bill.py:97: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.set_up_media_list.MediaList object at 0x000002601A18C850>\n\n    def get_media_list(self):\n        cookie = self.cookie\n        headers = self.headers\n    \n        host = \"https://test.hkciot.com\"\n        base_url = \"/cuteview/media/getInPage\"\n        media_url = host + base_url\n        body = {\n            \"cropId\": \"1751805517940535298\",\n            \"folderId\": \"0\",\n            \"mediaId\": \"\",\n            \"orgId\": \"1751805517940535299\",\n            \"secType\": \"\",\n            \"name\": \"\",\n            \"tagIds\": [],\n            \"type\": \"\",\n            \"pageIndex\": 1,\n            \"pageSize\": 10\n        }\n    \n        response = requests.post(url=media_url, headers=headers, data=json.dumps(body))\n        res = response.json()\n    \n>       media_ids = [media['id'] for media in res['data']['mediaFormatDtoList']]\nE       TypeError: 'NoneType' object is not iterable\n\ncommon\\set_up_media_list.py:39: TypeError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1715079562159,"stop":1715079562165,"duration":6},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1715079562165,"stop":1715079578184,"duration":16019},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1715079585609,"stop":1715079596784,"duration":11175},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"play_bill_page","time":{"start":1715080502929,"stop":1715080502929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"release_page","time":{"start":1715080502929,"stop":1715080502929,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"init_play_bill","time":{"start":1715080502929,"stop":1715080503040,"duration":111},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"generate_one_program","time":{"start":1715080503040,"stop":1715080503167,"duration":127},"status":"broken","statusMessage":"TypeError: 'NoneType' object is not iterable\n","statusTrace":"  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\ui\\test_case\\test_play_bill.py\", line 97, in generate_one_program\n    media_ids = media_list.get_media_list()\n  File \"D:\\ui\\common\\set_up_media_list.py\", line 39, in get_media_list\n    media_ids = [media['id'] for media in res['data']['mediaFormatDtoList']]\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0}],"afterStages":[{"name":"play_bill_page::0","time":{"start":1715080503210,"stop":1715080503210,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"release_page::0","time":{"start":1715080503218,"stop":1715080503218,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1715081342948,"stop":1715081345588,"duration":2640},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1715081348237,"stop":1715081350826,"duration":2589},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"labels":[{"name":"feature","value":"play bill list"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"@pytest.mark.usefixtures('generate_one_program')"},{"name":"tag","value":"run(order=9)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_play_bill"},{"name":"subSuite","value":"TestPlayBill"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"32024-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_play_bill"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('generate_one_program')","run(order=9)"]},"source":"796e0e70acdba026.json","parameterValues":[]}