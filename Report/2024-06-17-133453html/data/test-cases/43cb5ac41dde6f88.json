{"uid":"43cb5ac41dde6f88","name":"批量发送插播字幕","fullName":"test_case.test_terminal_center.TestTerminalCenter#test_batch_subtitle","historyId":"35151d3dddd3443c33e0d6eda1c8cf3b","time":{"start":1718602920284,"stop":1718603000353,"duration":80069},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-3506-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7AD5678A2+54818]\n\t(No symbol) [0x00007FF7AD4D6AD2]\n\t(No symbol) [0x00007FF7AD38DA3B]\n\t(No symbol) [0x00007FF7AD3D47CB]\n\t(No symbol) [0x00007FF7AD3D2B99]\n\t(No symbol) [0x00007FF7AD3D0968]\n\t(No symbol) [0x00007FF7AD3CFA23]\n\t(No symbol) [0x00007FF7AD3C571F]\n\t(No symbol) [0x00007FF7AD3EEAAA]\n\t(No symbol) [0x00007FF7AD3C5036]\n\t(No symbol) [0x00007FF7AD3EECC0]\n\t(No symbol) [0x00007FF7AD4075A2]\n\t(No symbol) [0x00007FF7AD3EE883]\n\t(No symbol) [0x00007FF7AD3C3691]\n\t(No symbol) [0x00007FF7AD3C48D4]\n\tGetHandleVerifier [0x00007FF7AD8CB9A2+3610402]\n\tGetHandleVerifier [0x00007FF7AD921870+3962352]\n\tGetHandleVerifier [0x00007FF7AD919D5F+3930847]\n\tGetHandleVerifier [0x00007FF7AD603656+693206]\n\t(No symbol) [0x00007FF7AD4E1638]\n\t(No symbol) [0x00007FF7AD4DD944]\n\t(No symbol) [0x00007FF7AD4DDA72]\n\t(No symbol) [0x00007FF7AD4CE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x000001782E5C4B80>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"批量发送插播字幕\")\n    @pytest.mark.run(order=12)\n    def test_batch_subtitle(self):\n        # sql_execute()\n        terminal_page = self.terminal_page\n        time.sleep(0.5)\n        with step(\"新增一个真实的设备\"):\n            terminal_page.add_real_terminal()\n        with step(\"点击全选按钮\"):\n            terminal_page.select_one_terminal()\n            # time.sleep(0.5)\n            # terminal_page.select_all_terminal()\n            print(\"点击全选按钮成功\")\n        time.sleep(0.5)\n        with step(\"点击设备控制按钮\"):\n            # terminal_page.click_terminal_control()\n>           terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n\ntest_case\\test_terminal_center.py:329: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasepage\\base_page.py:412: in click_button\n    self.get_element(args).click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000178550645E0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7AD4CE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-3506-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7AD5678A2+54818]\nE       \t(No symbol) [0x00007FF7AD4D6AD2]\nE       \t(No symbol) [0x00007FF7AD38DA3B]\nE       \t(No symbol) [0x00007FF7AD3D47CB]\nE       \t(No symbol) [0x00007FF7AD3D2B99]\nE       \t(No symbol) [0x00007FF7AD3D0968]\nE       \t(No symbol) [0x00007FF7AD3CFA23]\nE       \t(No symbol) [0x00007FF7AD3C571F]\nE       \t(No symbol) [0x00007FF7AD3EEAAA]\nE       \t(No symbol) [0x00007FF7AD3C5036]\nE       \t(No symbol) [0x00007FF7AD3EECC0]\nE       \t(No symbol) [0x00007FF7AD4075A2]\nE       \t(No symbol) [0x00007FF7AD3EE883]\nE       \t(No symbol) [0x00007FF7AD3C3691]\nE       \t(No symbol) [0x00007FF7AD3C48D4]\nE       \tGetHandleVerifier [0x00007FF7AD8CB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7AD921870+3962352]\nE       \tGetHandleVerifier [0x00007FF7AD919D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7AD603656+693206]\nE       \t(No symbol) [0x00007FF7AD4E1638]\nE       \t(No symbol) [0x00007FF7AD4DD944]\nE       \t(No symbol) [0x00007FF7AD4DDA72]\nE       \t(No symbol) [0x00007FF7AD4CE123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1718602498971,"stop":1718602498974,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver","time":{"start":1718602498975,"stop":1718602512774,"duration":13799},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"set_up_org","time":{"start":1718602512775,"stop":1718602513268,"duration":493},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"terminal_page","time":{"start":1718602513270,"stop":1718602513270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"sys_page","time":{"start":1718602513270,"stop":1718602513270,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"clear_terminal_list","time":{"start":1718602919873,"stop":1718602920283,"duration":410},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-3506-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7AD5678A2+54818]\n\t(No symbol) [0x00007FF7AD4D6AD2]\n\t(No symbol) [0x00007FF7AD38DA3B]\n\t(No symbol) [0x00007FF7AD3D47CB]\n\t(No symbol) [0x00007FF7AD3D2B99]\n\t(No symbol) [0x00007FF7AD3D0968]\n\t(No symbol) [0x00007FF7AD3CFA23]\n\t(No symbol) [0x00007FF7AD3C571F]\n\t(No symbol) [0x00007FF7AD3EEAAA]\n\t(No symbol) [0x00007FF7AD3C5036]\n\t(No symbol) [0x00007FF7AD3EECC0]\n\t(No symbol) [0x00007FF7AD4075A2]\n\t(No symbol) [0x00007FF7AD3EE883]\n\t(No symbol) [0x00007FF7AD3C3691]\n\t(No symbol) [0x00007FF7AD3C48D4]\n\tGetHandleVerifier [0x00007FF7AD8CB9A2+3610402]\n\tGetHandleVerifier [0x00007FF7AD921870+3962352]\n\tGetHandleVerifier [0x00007FF7AD919D5F+3930847]\n\tGetHandleVerifier [0x00007FF7AD603656+693206]\n\t(No symbol) [0x00007FF7AD4E1638]\n\t(No symbol) [0x00007FF7AD4DD944]\n\t(No symbol) [0x00007FF7AD4DDA72]\n\t(No symbol) [0x00007FF7AD4CE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x000001782E5C4B80>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"批量发送插播字幕\")\n    @pytest.mark.run(order=12)\n    def test_batch_subtitle(self):\n        # sql_execute()\n        terminal_page = self.terminal_page\n        time.sleep(0.5)\n        with step(\"新增一个真实的设备\"):\n            terminal_page.add_real_terminal()\n        with step(\"点击全选按钮\"):\n            terminal_page.select_one_terminal()\n            # time.sleep(0.5)\n            # terminal_page.select_all_terminal()\n            print(\"点击全选按钮成功\")\n        time.sleep(0.5)\n        with step(\"点击设备控制按钮\"):\n            # terminal_page.click_terminal_control()\n>           terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n\ntest_case\\test_terminal_center.py:329: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasepage\\base_page.py:412: in click_button\n    self.get_element(args).click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000178550645E0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7AD4CE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-3506-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7AD5678A2+54818]\nE       \t(No symbol) [0x00007FF7AD4D6AD2]\nE       \t(No symbol) [0x00007FF7AD38DA3B]\nE       \t(No symbol) [0x00007FF7AD3D47CB]\nE       \t(No symbol) [0x00007FF7AD3D2B99]\nE       \t(No symbol) [0x00007FF7AD3D0968]\nE       \t(No symbol) [0x00007FF7AD3CFA23]\nE       \t(No symbol) [0x00007FF7AD3C571F]\nE       \t(No symbol) [0x00007FF7AD3EEAAA]\nE       \t(No symbol) [0x00007FF7AD3C5036]\nE       \t(No symbol) [0x00007FF7AD3EECC0]\nE       \t(No symbol) [0x00007FF7AD4075A2]\nE       \t(No symbol) [0x00007FF7AD3EE883]\nE       \t(No symbol) [0x00007FF7AD3C3691]\nE       \t(No symbol) [0x00007FF7AD3C48D4]\nE       \tGetHandleVerifier [0x00007FF7AD8CB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7AD921870+3962352]\nE       \tGetHandleVerifier [0x00007FF7AD919D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7AD603656+693206]\nE       \t(No symbol) [0x00007FF7AD4E1638]\nE       \t(No symbol) [0x00007FF7AD4DD944]\nE       \t(No symbol) [0x00007FF7AD4DDA72]\nE       \t(No symbol) [0x00007FF7AD4CE123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"新增一个真实的设备","time":{"start":1718602920788,"stop":1718602978247,"duration":57459},"status":"passed","steps":[{"name":"进入设备中心","time":{"start":1718602920882,"stop":1718602921692,"duration":810},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击设备接入","time":{"start":1718602921692,"stop":1718602922789,"duration":1097},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入设备sn码","time":{"start":1718602922789,"stop":1718602923369,"duration":580},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入设备名称","time":{"start":1718602923369,"stop":1718602923937,"duration":568},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"先点击所属机构","time":{"start":1718602923937,"stop":1718602924510,"duration":573},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"在下拉框展开组织架构","time":{"start":1718602924510,"stop":1718602926579,"duration":2069},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"在下拉框进行选择","time":{"start":1718602926579,"stop":1718602929213,"duration":2634},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击保存按钮","time":{"start":1718602929213,"stop":1718602949613,"duration":20400},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击设备接入","time":{"start":1718602950346,"stop":1718602951435,"duration":1089},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入设备sn码","time":{"start":1718602951435,"stop":1718602952009,"duration":574},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入设备名称","time":{"start":1718602952009,"stop":1718602952587,"duration":578},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"先点击所属机构","time":{"start":1718602952587,"stop":1718602953142,"duration":555},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"在下拉框展开组织架构","time":{"start":1718602953142,"stop":1718602955235,"duration":2093},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"在下拉框进行选择","time":{"start":1718602955235,"stop":1718602957860,"duration":2625},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击保存按钮","time":{"start":1718602957860,"stop":1718602978247,"duration":20387},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":15,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击全选按钮","time":{"start":1718602978247,"stop":1718602998792,"duration":20545},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"点击设备控制按钮","time":{"start":1718602999297,"stop":1718603000351,"duration":1054},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-3506-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7AD5678A2+54818]\n\t(No symbol) [0x00007FF7AD4D6AD2]\n\t(No symbol) [0x00007FF7AD38DA3B]\n\t(No symbol) [0x00007FF7AD3D47CB]\n\t(No symbol) [0x00007FF7AD3D2B99]\n\t(No symbol) [0x00007FF7AD3D0968]\n\t(No symbol) [0x00007FF7AD3CFA23]\n\t(No symbol) [0x00007FF7AD3C571F]\n\t(No symbol) [0x00007FF7AD3EEAAA]\n\t(No symbol) [0x00007FF7AD3C5036]\n\t(No symbol) [0x00007FF7AD3EECC0]\n\t(No symbol) [0x00007FF7AD4075A2]\n\t(No symbol) [0x00007FF7AD3EE883]\n\t(No symbol) [0x00007FF7AD3C3691]\n\t(No symbol) [0x00007FF7AD3C48D4]\n\tGetHandleVerifier [0x00007FF7AD8CB9A2+3610402]\n\tGetHandleVerifier [0x00007FF7AD921870+3962352]\n\tGetHandleVerifier [0x00007FF7AD919D5F+3930847]\n\tGetHandleVerifier [0x00007FF7AD603656+693206]\n\t(No symbol) [0x00007FF7AD4E1638]\n\t(No symbol) [0x00007FF7AD4DD944]\n\t(No symbol) [0x00007FF7AD4DDA72]\n\t(No symbol) [0x00007FF7AD4CE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\n","statusTrace":"  File \"D:\\git\\ui_test\\test_case\\test_terminal_center.py\", line 329, in test_batch_subtitle\n    terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 412, in click_button\n    self.get_element(args).click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":18,"attachmentsCount":0,"shouldDisplayMessage":true},"afterStages":[{"name":"terminal_page::0","time":{"start":1718603969024,"stop":1718603969024,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver::0","time":{"start":1718603969039,"stop":1718603973892,"duration":4853},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"sys_page::0","time":{"start":1718603969039,"stop":1718603969039,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"epic","value":"项目hkc"},{"name":"feature","value":"terminal_center"},{"name":"tag","value":"run(order=12)"},{"name":"tag","value":"@pytest.mark.usefixtures('clear_terminal_list')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_terminal_center"},{"name":"subSuite","value":"TestTerminalCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"29164-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_terminal_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('clear_terminal_list')","run(order=12)"]},"source":"43cb5ac41dde6f88.json","parameterValues":[]}