{"uid":"6e9d5f444f2db6d5","name":"确认删除单个素材，删除成功","fullName":"test_case.test_media_center.TestMediaCenter#test_delete_success","historyId":"d67152f85e0fd6e35959f83ff66df89a","time":{"start":1714439724513,"stop":1714439724513,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入账号或手机号\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF765C578A2+54818]\n\t(No symbol) [0x00007FF765BC6AD2]\n\t(No symbol) [0x00007FF765A7DA3B]\n\t(No symbol) [0x00007FF765ABE4FC]\n\t(No symbol) [0x00007FF765ABE67C]\n\t(No symbol) [0x00007FF765AF9627]\n\t(No symbol) [0x00007FF765ADEAEF]\n\t(No symbol) [0x00007FF765AF75A2]\n\t(No symbol) [0x00007FF765ADE883]\n\t(No symbol) [0x00007FF765AB3691]\n\t(No symbol) [0x00007FF765AB48D4]\n\tGetHandleVerifier [0x00007FF765FBB9A2+3610402]\n\tGetHandleVerifier [0x00007FF766011870+3962352]\n\tGetHandleVerifier [0x00007FF766009D5F+3930847]\n\tGetHandleVerifier [0x00007FF765CF3656+693206]\n\t(No symbol) [0x00007FF765BD1638]\n\t(No symbol) [0x00007FF765BCD944]\n\t(No symbol) [0x00007FF765BCDA72]\n\t(No symbol) [0x00007FF765BBE123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]","statusTrace":"env = {'cloud_env_password': 'Aa123456', 'cloud_env_url': 'https://cloud.hkciot.com/#/login', 'cloud_env_username': 'hkctest', 'test_env_password': 'Aa12345678', ...}\n\n    @pytest.fixture(scope=\"session\", autouse=True)\n    def driver(env):\n        \"\"\"测试hkc登录模块\"\"\"\n        driver = webdriver.Chrome()\n        # ===============================创建了chrome浏览器=========================================================\n        driver.implicitly_wait(20)\n        # driver.maximize_window()\n        print(\"\\n setup begin=============\")\n        test_env_url = env[\"test_env_url\"]\n        driver.get(test_env_url)\n        login_page = LoginPage(driver)\n>       login_page.success_login(env)\n\nconftest.py:32: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\login_page.py:29: in success_login\n    self.click(self.username_loc)\nbasepage\\base_page.py:234: in click\n    e1 = self.get_element(args)\nbasepage\\base_page.py:121: in get_element\n    w_element = self.driver.find_element(By.XPATH, value=args_value)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000252D59A5450>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF765BBE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入账号或手机号\"]\"}\nE         (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF765C578A2+54818]\nE       \t(No symbol) [0x00007FF765BC6AD2]\nE       \t(No symbol) [0x00007FF765A7DA3B]\nE       \t(No symbol) [0x00007FF765ABE4FC]\nE       \t(No symbol) [0x00007FF765ABE67C]\nE       \t(No symbol) [0x00007FF765AF9627]\nE       \t(No symbol) [0x00007FF765ADEAEF]\nE       \t(No symbol) [0x00007FF765AF75A2]\nE       \t(No symbol) [0x00007FF765ADE883]\nE       \t(No symbol) [0x00007FF765AB3691]\nE       \t(No symbol) [0x00007FF765AB48D4]\nE       \tGetHandleVerifier [0x00007FF765FBB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF766011870+3962352]\nE       \tGetHandleVerifier [0x00007FF766009D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF765CF3656+693206]\nE       \t(No symbol) [0x00007FF765BD1638]\nE       \t(No symbol) [0x00007FF765BCD944]\nE       \t(No symbol) [0x00007FF765BCDA72]\nE       \t(No symbol) [0x00007FF765BBE123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1714439465023,"stop":1714439465024,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver","time":{"start":1714439465024,"stop":1714439722444,"duration":257420},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入账号或手机号\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF765C578A2+54818]\n\t(No symbol) [0x00007FF765BC6AD2]\n\t(No symbol) [0x00007FF765A7DA3B]\n\t(No symbol) [0x00007FF765ABE4FC]\n\t(No symbol) [0x00007FF765ABE67C]\n\t(No symbol) [0x00007FF765AF9627]\n\t(No symbol) [0x00007FF765ADEAEF]\n\t(No symbol) [0x00007FF765AF75A2]\n\t(No symbol) [0x00007FF765ADE883]\n\t(No symbol) [0x00007FF765AB3691]\n\t(No symbol) [0x00007FF765AB48D4]\n\tGetHandleVerifier [0x00007FF765FBB9A2+3610402]\n\tGetHandleVerifier [0x00007FF766011870+3962352]\n\tGetHandleVerifier [0x00007FF766009D5F+3930847]\n\tGetHandleVerifier [0x00007FF765CF3656+693206]\n\t(No symbol) [0x00007FF765BD1638]\n\t(No symbol) [0x00007FF765BCD944]\n\t(No symbol) [0x00007FF765BCDA72]\n\t(No symbol) [0x00007FF765BBE123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n","statusTrace":"  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 902, in call_fixture_func\n    fixture_result = next(generator)\n  File \"D:\\ui\\conftest.py\", line 32, in driver\n    login_page.success_login(env)\n  File \"D:\\ui\\pageobject\\login_page.py\", line 29, in success_login\n    self.click(self.username_loc)\n  File \"D:\\ui\\basepage\\base_page.py\", line 234, in click\n    e1 = self.get_element(args)\n  File \"D:\\ui\\basepage\\base_page.py\", line 121, in get_element\n    w_element = self.driver.find_element(By.XPATH, value=args_value)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 742, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"afterStages":[],"labels":[{"name":"feature","value":"media center"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"@pytest.mark.usefixtures('media_set_up')"},{"name":"tag","value":"run(order=13)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_media_center"},{"name":"subSuite","value":"TestMediaCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"14412-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_media_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('media_set_up')","run(order=13)"]},"source":"6e9d5f444f2db6d5.json","parameterValues":[]}