{"name": "重命名节目", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ED1078A2+54818]\n\t(No symbol) [0x00007FF6ED076AD2]\n\t(No symbol) [0x00007FF6ECF2D8ED]\n\t(No symbol) [0x00007FF6ECF6F8E5]\n\t(No symbol) [0x00007FF6ECF6571F]\n\t(No symbol) [0x00007FF6ECF8EAAA]\n\t(No symbol) [0x00007FF6ECF65036]\n\t(No symbol) [0x00007FF6ECF8ECC0]\n\t(No symbol) [0x00007FF6ECFA75A2]\n\t(No symbol) [0x00007FF6ECF8E883]\n\t(No symbol) [0x00007FF6ECF63691]\n\t(No symbol) [0x00007FF6ECF648D4]\n\tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\n\tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\n\tGetHandleVerifier [0x00007FF6ED1A3656+693206]\n\t(No symbol) [0x00007FF6ED081638]\n\t(No symbol) [0x00007FF6ED07D944]\n\t(No symbol) [0x00007FF6ED07DA72]\n\t(No symbol) [0x00007FF6ED06E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]", "trace": "self = <test_case.test_program_management.TestProgramManagement object at 0x0000018D52B0B1F0>\n\n    @allure.title(\"重命名节目\")\n    @pytest.mark.run(order=18)\n    def test_rename_program(self):\n        program_page = self.program_page\n        with step(\"先创建一个节目\"):\n            program_page.switch_to_program_management()\n            time.sleep(0.3)\n>           program_page.create_general_program()\n\ntest_case\\test_program_management.py:488: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\program_page.py:65: in create_general_program\n    raise e\npageobject\\program_page.py:53: in create_general_program\n    self.choose_screen(\"1920x1080\")\npageobject\\program_page.py:176: in choose_screen\n    self.click('by_xpath,//span[text()=\"1920x1080\"]')\nbasepage\\base_page.py:240: in click\n    e1.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000018D79EA5510>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF6ED06E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6ED1078A2+54818]\nE       \t(No symbol) [0x00007FF6ED076AD2]\nE       \t(No symbol) [0x00007FF6ECF2D8ED]\nE       \t(No symbol) [0x00007FF6ECF6F8E5]\nE       \t(No symbol) [0x00007FF6ECF6571F]\nE       \t(No symbol) [0x00007FF6ECF8EAAA]\nE       \t(No symbol) [0x00007FF6ECF65036]\nE       \t(No symbol) [0x00007FF6ECF8ECC0]\nE       \t(No symbol) [0x00007FF6ECFA75A2]\nE       \t(No symbol) [0x00007FF6ECF8E883]\nE       \t(No symbol) [0x00007FF6ECF63691]\nE       \t(No symbol) [0x00007FF6ECF648D4]\nE       \tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\nE       \tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF6ED1A3656+693206]\nE       \t(No symbol) [0x00007FF6ED081638]\nE       \t(No symbol) [0x00007FF6ED07D944]\nE       \t(No symbol) [0x00007FF6ED07DA72]\nE       \t(No symbol) [0x00007FF6ED06E123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "先创建一个节目", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ED1078A2+54818]\n\t(No symbol) [0x00007FF6ED076AD2]\n\t(No symbol) [0x00007FF6ECF2D8ED]\n\t(No symbol) [0x00007FF6ECF6F8E5]\n\t(No symbol) [0x00007FF6ECF6571F]\n\t(No symbol) [0x00007FF6ECF8EAAA]\n\t(No symbol) [0x00007FF6ECF65036]\n\t(No symbol) [0x00007FF6ECF8ECC0]\n\t(No symbol) [0x00007FF6ECFA75A2]\n\t(No symbol) [0x00007FF6ECF8E883]\n\t(No symbol) [0x00007FF6ECF63691]\n\t(No symbol) [0x00007FF6ECF648D4]\n\tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\n\tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\n\tGetHandleVerifier [0x00007FF6ED1A3656+693206]\n\t(No symbol) [0x00007FF6ED081638]\n\t(No symbol) [0x00007FF6ED07D944]\n\t(No symbol) [0x00007FF6ED07DA72]\n\t(No symbol) [0x00007FF6ED06E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n", "trace": "  File \"D:\\ui\\test_case\\test_program_management.py\", line 488, in test_rename_program\n    program_page.create_general_program()\n  File \"D:\\ui\\pageobject\\program_page.py\", line 65, in create_general_program\n    raise e\n  File \"D:\\ui\\pageobject\\program_page.py\", line 53, in create_general_program\n    self.choose_screen(\"1920x1080\")\n  File \"D:\\ui\\pageobject\\program_page.py\", line 176, in choose_screen\n    self.click('by_xpath,//span[text()=\"1920x1080\"]')\n  File \"D:\\ui\\basepage\\base_page.py\", line 240, in click\n    e1.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "steps": [{"name": "点击创建节目", "status": "passed", "start": 1714980406042, "stop": 1714980407224}, {"name": "输入节目名称（普通节目）", "status": "passed", "start": 1714980407225, "stop": 1714980407926}, {"name": "选择屏幕方向", "status": "passed", "start": 1714980407926, "stop": 1714980408544}, {"name": "选择分辨率", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6ED1078A2+54818]\n\t(No symbol) [0x00007FF6ED076AD2]\n\t(No symbol) [0x00007FF6ECF2D8ED]\n\t(No symbol) [0x00007FF6ECF6F8E5]\n\t(No symbol) [0x00007FF6ECF6571F]\n\t(No symbol) [0x00007FF6ECF8EAAA]\n\t(No symbol) [0x00007FF6ECF65036]\n\t(No symbol) [0x00007FF6ECF8ECC0]\n\t(No symbol) [0x00007FF6ECFA75A2]\n\t(No symbol) [0x00007FF6ECF8E883]\n\t(No symbol) [0x00007FF6ECF63691]\n\t(No symbol) [0x00007FF6ECF648D4]\n\tGetHandleVerifier [0x00007FF6ED46B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6ED4C1870+3962352]\n\tGetHandleVerifier [0x00007FF6ED4B9D5F+3930847]\n\tGetHandleVerifier [0x00007FF6ED1A3656+693206]\n\t(No symbol) [0x00007FF6ED081638]\n\t(No symbol) [0x00007FF6ED07D944]\n\t(No symbol) [0x00007FF6ED07DA72]\n\t(No symbol) [0x00007FF6ED06E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n", "trace": "  File \"D:\\ui\\pageobject\\program_page.py\", line 53, in create_general_program\n    self.choose_screen(\"1920x1080\")\n  File \"D:\\ui\\pageobject\\program_page.py\", line 176, in choose_screen\n    self.click('by_xpath,//span[text()=\"1920x1080\"]')\n  File \"D:\\ui\\basepage\\base_page.py\", line 240, in click\n    e1.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1714980408544, "stop": 1714980430084}], "start": 1714980404555, "stop": 1714980430086}], "start": 1714980404555, "stop": 1714980430089, "uuid": "c4a82781-c57a-4b79-95bb-c8b39c9d3e36", "historyId": "232513e0d4612096adff11519d29c197", "testCaseId": "232513e0d4612096adff11519d29c197", "fullName": "test_case.test_program_management.TestProgramManagement#test_rename_program", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "program management"}, {"name": "tag", "value": "run(order=18)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('program_management_set_up')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_program_management"}, {"name": "subSuite", "value": "TestProgramManagement"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "35244-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_program_management"}]}