{"name": "重命名节目", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入名称\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7846A78A2+54818]\n\t(No symbol) [0x00007FF784616AD2]\n\t(No symbol) [0x00007FF7844CDA3B]\n\t(No symbol) [0x00007FF78450E4FC]\n\t(No symbol) [0x00007FF78450E67C]\n\t(No symbol) [0x00007FF784549627]\n\t(No symbol) [0x00007FF78452EAEF]\n\t(No symbol) [0x00007FF7845475A2]\n\t(No symbol) [0x00007FF78452E883]\n\t(No symbol) [0x00007FF784503691]\n\t(No symbol) [0x00007FF7845048D4]\n\tGetHandleVerifier [0x00007FF784A0B9A2+3610402]\n\tGetHandleVerifier [0x00007FF784A61870+3962352]\n\tGetHandleVerifier [0x00007FF784A59D5F+3930847]\n\tGetHandleVerifier [0x00007FF784743656+693206]\n\t(No symbol) [0x00007FF784621638]\n\t(No symbol) [0x00007FF78461D944]\n\t(No symbol) [0x00007FF78461DA72]\n\t(No symbol) [0x00007FF78460E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]", "trace": "self = <test_case.test_program_management.TestProgramManagement object at 0x0000022274614190>\n\n    @allure.title(\"重命名节目\")\n    @pytest.mark.run(order=18)\n    def test_rename_program(self):\n        program_page = self.program_page\n        with step(\"先创建一个节目\"):\n            program_page.switch_to_program_management()\n            time.sleep(0.3)\n            program_page.create_general_program()\n        program_page.refresh()\n    \n        with step(\"点击更多按钮\"):\n            program_page.program_more_button()\n    \n        with step(\"点击重命名按钮\"):\n            program_page.click_rename_program()\n    \n        time.sleep(0.5)\n        with step(\"输入新的节目名称\"):\n>           program_page.rename_program_name(\"新的节目名称\")\n\ntest_case\\test_program_management.py:506: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\program_page.py:439: in rename_program_name\n    self.clear(rename_locator)\nbasepage\\base_page.py:397: in clear\n    self.get_element(args).clear()\nbasepage\\base_page.py:245: in get_element\n    element = self.driver.find_element(By.XPATH, value=selector_value)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002227F1185B0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF78460E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入名称\"]\"}\nE         (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7846A78A2+54818]\nE       \t(No symbol) [0x00007FF784616AD2]\nE       \t(No symbol) [0x00007FF7844CDA3B]\nE       \t(No symbol) [0x00007FF78450E4FC]\nE       \t(No symbol) [0x00007FF78450E67C]\nE       \t(No symbol) [0x00007FF784549627]\nE       \t(No symbol) [0x00007FF78452EAEF]\nE       \t(No symbol) [0x00007FF7845475A2]\nE       \t(No symbol) [0x00007FF78452E883]\nE       \t(No symbol) [0x00007FF784503691]\nE       \t(No symbol) [0x00007FF7845048D4]\nE       \tGetHandleVerifier [0x00007FF784A0B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF784A61870+3962352]\nE       \tGetHandleVerifier [0x00007FF784A59D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF784743656+693206]\nE       \t(No symbol) [0x00007FF784621638]\nE       \t(No symbol) [0x00007FF78461D944]\nE       \t(No symbol) [0x00007FF78461DA72]\nE       \t(No symbol) [0x00007FF78460E123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "steps": [{"name": "先创建一个节目", "status": "passed", "steps": [{"name": "点击创建节目", "status": "passed", "start": 1718845861161, "stop": 1718845861347}, {"name": "输入节目名称（普通节目）", "status": "passed", "start": 1718845861347, "stop": 1718845861514}, {"name": "选择屏幕方向", "status": "passed", "start": 1718845861514, "stop": 1718845861613}, {"name": "选择分辨率", "status": "passed", "start": 1718845861613, "stop": 1718845872313}, {"name": "点击保存按钮", "status": "passed", "start": 1718845872314, "stop": 1718845872485}, {"name": "选择分辨率", "status": "passed", "start": 1718845872485, "stop": 1718845883131}, {"name": "在编辑器中进行保存", "status": "passed", "start": 1718845883131, "stop": 1718845926787}], "start": 1718845860793, "stop": 1718845926787}, {"name": "点击更多按钮", "status": "passed", "start": 1718845927393, "stop": 1718845927825}, {"name": "点击重命名按钮", "status": "passed", "start": 1718845927825, "stop": 1718845938076}, {"name": "输入新的节目名称", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//input[@placeholder=\"请输入名称\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7846A78A2+54818]\n\t(No symbol) [0x00007FF784616AD2]\n\t(No symbol) [0x00007FF7844CDA3B]\n\t(No symbol) [0x00007FF78450E4FC]\n\t(No symbol) [0x00007FF78450E67C]\n\t(No symbol) [0x00007FF784549627]\n\t(No symbol) [0x00007FF78452EAEF]\n\t(No symbol) [0x00007FF7845475A2]\n\t(No symbol) [0x00007FF78452E883]\n\t(No symbol) [0x00007FF784503691]\n\t(No symbol) [0x00007FF7845048D4]\n\tGetHandleVerifier [0x00007FF784A0B9A2+3610402]\n\tGetHandleVerifier [0x00007FF784A61870+3962352]\n\tGetHandleVerifier [0x00007FF784A59D5F+3930847]\n\tGetHandleVerifier [0x00007FF784743656+693206]\n\t(No symbol) [0x00007FF784621638]\n\t(No symbol) [0x00007FF78461D944]\n\t(No symbol) [0x00007FF78461DA72]\n\t(No symbol) [0x00007FF78460E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\n", "trace": "  File \"D:\\git\\ui_test\\test_case\\test_program_management.py\", line 506, in test_rename_program\n    program_page.rename_program_name(\"新的节目名称\")\n  File \"D:\\git\\ui_test\\pageobject\\program_page.py\", line 439, in rename_program_name\n    self.clear(rename_locator)\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 397, in clear\n    self.get_element(args).clear()\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 245, in get_element\n    element = self.driver.find_element(By.XPATH, value=selector_value)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 742, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1718845938579, "stop": 1718845958606}], "start": 1718845860792, "stop": 1718845958607, "uuid": "ded51cf8-b648-49dc-9d02-0e9a3f721e25", "historyId": "232513e0d4612096adff11519d29c197", "testCaseId": "232513e0d4612096adff11519d29c197", "fullName": "test_case.test_program_management.TestProgramManagement#test_rename_program", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "program management"}, {"name": "tag", "value": "run(order=18)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('program_management_set_up')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_program_management"}, {"name": "subSuite", "value": "TestProgramManagement"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "15792-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_program_management"}]}