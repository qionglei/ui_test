{"name": "关闭批量删除弹框", "status": "broken", "statusDetails": {"message": "TypeError: 'NoneType' object is not iterable", "trace": "media_page = <pageobject.media_page.MediaPage object at 0x000002601B7E32E0>\n\n    @pytest.fixture(scope=\"function\", autouse=True)\n    def media_set_up(media_page):\n        media_list = MediaList()\n>       media_list.delete_all_media()\n\ntest_case\\test_media_center.py:24: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\ncommon\\set_up_media_list.py:44: in delete_all_media\n    media_ids = self.get_media_list()\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <common.set_up_media_list.MediaList object at 0x000002601B25A260>\n\n    def get_media_list(self):\n        cookie = self.cookie\n        headers = self.headers\n    \n        host = \"https://test.hkciot.com\"\n        base_url = \"/cuteview/media/getInPage\"\n        media_url = host + base_url\n        body = {\n            \"cropId\": \"1751805517940535298\",\n            \"folderId\": \"0\",\n            \"mediaId\": \"\",\n            \"orgId\": \"1751805517940535299\",\n            \"secType\": \"\",\n            \"name\": \"\",\n            \"tagIds\": [],\n            \"type\": \"\",\n            \"pageIndex\": 1,\n            \"pageSize\": 10\n        }\n    \n        response = requests.post(url=media_url, headers=headers, data=json.dumps(body))\n        res = response.json()\n    \n>       media_ids = [media['id'] for media in res['data']['mediaFormatDtoList']]\nE       TypeError: 'NoneType' object is not iterable\n\ncommon\\set_up_media_list.py:39: TypeError"}, "start": 1715080766099, "stop": 1715080766099, "uuid": "2fe8a481-f0bf-412e-80dc-6c417cb1fd4b", "historyId": "83a78216dc82a0d91d05545d5963c89d", "testCaseId": "83a78216dc82a0d91d05545d5963c89d", "fullName": "test_case.test_media_center.TestMediaCenter#test_close_multi_delete", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "media center"}, {"name": "tag", "value": "@pytest.mark.usefixtures('media_set_up')"}, {"name": "tag", "value": "run(order=15)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_media_center"}, {"name": "subSuite", "value": "TestMediaCenter"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "32024-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_media_center"}]}