{"uid":"72a90afc45b839fa","name":"批量操作：停止、播放","fullName":"test_case.test_terminal_center.TestTerminalCenter#test_batch_terminal_stop_and_display","historyId":"e49c2eafa8a5597f424fe2cc1716b029","time":{"start":1718678290204,"stop":1718678371983,"duration":81779},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-7764-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7005978A2+54818]\n\t(No symbol) [0x00007FF700506AD2]\n\t(No symbol) [0x00007FF7003BDA3B]\n\t(No symbol) [0x00007FF7004047CB]\n\t(No symbol) [0x00007FF700402B99]\n\t(No symbol) [0x00007FF700400968]\n\t(No symbol) [0x00007FF7003FFA23]\n\t(No symbol) [0x00007FF7003F571F]\n\t(No symbol) [0x00007FF70041EAAA]\n\t(No symbol) [0x00007FF7003F5036]\n\t(No symbol) [0x00007FF70041ECC0]\n\t(No symbol) [0x00007FF7004375A2]\n\t(No symbol) [0x00007FF70041E883]\n\t(No symbol) [0x00007FF7003F3691]\n\t(No symbol) [0x00007FF7003F48D4]\n\tGetHandleVerifier [0x00007FF7008FB9A2+3610402]\n\tGetHandleVerifier [0x00007FF700951870+3962352]\n\tGetHandleVerifier [0x00007FF700949D5F+3930847]\n\tGetHandleVerifier [0x00007FF700633656+693206]\n\t(No symbol) [0x00007FF700511638]\n\t(No symbol) [0x00007FF70050D944]\n\t(No symbol) [0x00007FF70050DA72]\n\t(No symbol) [0x00007FF7004FE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000024A7875CEB0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"批量操作：停止、播放\")\n    @pytest.mark.run(order=11)\n    def test_batch_terminal_stop_and_display(self):\n        terminal_page = self.terminal_page\n        # sql_execute()\n        with step(\"新增真实设备\"):\n            terminal_page.switch_to_terminal_center()\n            terminal_page.add_real_terminal()\n        with step(\"点击全选按钮\"):\n            terminal_page.select_one_terminal()\n            # time.sleep(3)\n            # terminal_page.select_all_terminal()\n            print(\"点击全选按钮成功\")\n        time.sleep(0.5)\n        with step(\"点击设备控制按钮\"):\n            # terminal_page.click_terminal_control()\n>           terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n\ntest_case\\test_terminal_center.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasepage\\base_page.py:412: in click_button\n    self.get_element(args).click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024A7F1E6740>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7004FE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-7764-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7005978A2+54818]\nE       \t(No symbol) [0x00007FF700506AD2]\nE       \t(No symbol) [0x00007FF7003BDA3B]\nE       \t(No symbol) [0x00007FF7004047CB]\nE       \t(No symbol) [0x00007FF700402B99]\nE       \t(No symbol) [0x00007FF700400968]\nE       \t(No symbol) [0x00007FF7003FFA23]\nE       \t(No symbol) [0x00007FF7003F571F]\nE       \t(No symbol) [0x00007FF70041EAAA]\nE       \t(No symbol) [0x00007FF7003F5036]\nE       \t(No symbol) [0x00007FF70041ECC0]\nE       \t(No symbol) [0x00007FF7004375A2]\nE       \t(No symbol) [0x00007FF70041E883]\nE       \t(No symbol) [0x00007FF7003F3691]\nE       \t(No symbol) [0x00007FF7003F48D4]\nE       \tGetHandleVerifier [0x00007FF7008FB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF700951870+3962352]\nE       \tGetHandleVerifier [0x00007FF700949D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF700633656+693206]\nE       \t(No symbol) [0x00007FF700511638]\nE       \t(No symbol) [0x00007FF70050D944]\nE       \t(No symbol) [0x00007FF70050DA72]\nE       \t(No symbol) [0x00007FF7004FE123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1718677944062,"stop":1718677944063,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1718677944063,"stop":1718677958085,"duration":14022},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"set_up_org","time":{"start":1718677958086,"stop":1718677958549,"duration":463},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"sys_page","time":{"start":1718677958549,"stop":1718677958550,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"terminal_page","time":{"start":1718677958550,"stop":1718677958550,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"clear_terminal_list","time":{"start":1718678289688,"stop":1718678290203,"duration":515},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-7764-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7005978A2+54818]\n\t(No symbol) [0x00007FF700506AD2]\n\t(No symbol) [0x00007FF7003BDA3B]\n\t(No symbol) [0x00007FF7004047CB]\n\t(No symbol) [0x00007FF700402B99]\n\t(No symbol) [0x00007FF700400968]\n\t(No symbol) [0x00007FF7003FFA23]\n\t(No symbol) [0x00007FF7003F571F]\n\t(No symbol) [0x00007FF70041EAAA]\n\t(No symbol) [0x00007FF7003F5036]\n\t(No symbol) [0x00007FF70041ECC0]\n\t(No symbol) [0x00007FF7004375A2]\n\t(No symbol) [0x00007FF70041E883]\n\t(No symbol) [0x00007FF7003F3691]\n\t(No symbol) [0x00007FF7003F48D4]\n\tGetHandleVerifier [0x00007FF7008FB9A2+3610402]\n\tGetHandleVerifier [0x00007FF700951870+3962352]\n\tGetHandleVerifier [0x00007FF700949D5F+3930847]\n\tGetHandleVerifier [0x00007FF700633656+693206]\n\t(No symbol) [0x00007FF700511638]\n\t(No symbol) [0x00007FF70050D944]\n\t(No symbol) [0x00007FF70050DA72]\n\t(No symbol) [0x00007FF7004FE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000024A7875CEB0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"批量操作：停止、播放\")\n    @pytest.mark.run(order=11)\n    def test_batch_terminal_stop_and_display(self):\n        terminal_page = self.terminal_page\n        # sql_execute()\n        with step(\"新增真实设备\"):\n            terminal_page.switch_to_terminal_center()\n            terminal_page.add_real_terminal()\n        with step(\"点击全选按钮\"):\n            terminal_page.select_one_terminal()\n            # time.sleep(3)\n            # terminal_page.select_all_terminal()\n            print(\"点击全选按钮成功\")\n        time.sleep(0.5)\n        with step(\"点击设备控制按钮\"):\n            # terminal_page.click_terminal_control()\n>           terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n\ntest_case\\test_terminal_center.py:301: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasepage\\base_page.py:412: in click_button\n    self.get_element(args).click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024A7F1E6740>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF7004FE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-7764-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7005978A2+54818]\nE       \t(No symbol) [0x00007FF700506AD2]\nE       \t(No symbol) [0x00007FF7003BDA3B]\nE       \t(No symbol) [0x00007FF7004047CB]\nE       \t(No symbol) [0x00007FF700402B99]\nE       \t(No symbol) [0x00007FF700400968]\nE       \t(No symbol) [0x00007FF7003FFA23]\nE       \t(No symbol) [0x00007FF7003F571F]\nE       \t(No symbol) [0x00007FF70041EAAA]\nE       \t(No symbol) [0x00007FF7003F5036]\nE       \t(No symbol) [0x00007FF70041ECC0]\nE       \t(No symbol) [0x00007FF7004375A2]\nE       \t(No symbol) [0x00007FF70041E883]\nE       \t(No symbol) [0x00007FF7003F3691]\nE       \t(No symbol) [0x00007FF7003F48D4]\nE       \tGetHandleVerifier [0x00007FF7008FB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF700951870+3962352]\nE       \tGetHandleVerifier [0x00007FF700949D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF700633656+693206]\nE       \t(No symbol) [0x00007FF700511638]\nE       \t(No symbol) [0x00007FF70050D944]\nE       \t(No symbol) [0x00007FF70050DA72]\nE       \t(No symbol) [0x00007FF7004FE123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","steps":[{"name":"新增真实设备","time":{"start":1718678290205,"stop":1718678349796,"duration":59591},"status":"passed","steps":[{"name":"进入设备中心","time":{"start":1718678290401,"stop":1718678291610,"duration":1209},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击设备接入","time":{"start":1718678291610,"stop":1718678292838,"duration":1228},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备sn码","time":{"start":1718678292838,"stop":1718678293540,"duration":702},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备名称","time":{"start":1718678293540,"stop":1718678294211,"duration":671},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"先点击所属机构","time":{"start":1718678294211,"stop":1718678294863,"duration":652},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框展开组织架构","time":{"start":1718678294863,"stop":1718678296973,"duration":2110},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框进行选择","time":{"start":1718678296973,"stop":1718678299708,"duration":2735},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击保存按钮","time":{"start":1718678299708,"stop":1718678320378,"duration":20670},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击设备接入","time":{"start":1718678321283,"stop":1718678322455,"duration":1172},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备sn码","time":{"start":1718678322455,"stop":1718678323105,"duration":650},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备名称","time":{"start":1718678323105,"stop":1718678323745,"duration":640},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"先点击所属机构","time":{"start":1718678323745,"stop":1718678324414,"duration":669},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框展开组织架构","time":{"start":1718678324414,"stop":1718678326511,"duration":2097},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框进行选择","time":{"start":1718678326511,"stop":1718678329215,"duration":2704},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击保存按钮","time":{"start":1718678329215,"stop":1718678349796,"duration":20581},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":15},{"name":"点击全选按钮","time":{"start":1718678349796,"stop":1718678370377,"duration":20581},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击设备控制按钮","time":{"start":1718678370890,"stop":1718678371980,"duration":1090},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <span data-v-9c2770a4=\"\" class=\"\">...</span> is not clickable at point (397, 184). Other element would receive the click: <div role=\"dialog\" aria-modal=\"true\" aria-label=\"设备接入\" aria-describedby=\"el-id-7764-50\" class=\"el-overlay-dialog\" style=\"display: flex;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7005978A2+54818]\n\t(No symbol) [0x00007FF700506AD2]\n\t(No symbol) [0x00007FF7003BDA3B]\n\t(No symbol) [0x00007FF7004047CB]\n\t(No symbol) [0x00007FF700402B99]\n\t(No symbol) [0x00007FF700400968]\n\t(No symbol) [0x00007FF7003FFA23]\n\t(No symbol) [0x00007FF7003F571F]\n\t(No symbol) [0x00007FF70041EAAA]\n\t(No symbol) [0x00007FF7003F5036]\n\t(No symbol) [0x00007FF70041ECC0]\n\t(No symbol) [0x00007FF7004375A2]\n\t(No symbol) [0x00007FF70041E883]\n\t(No symbol) [0x00007FF7003F3691]\n\t(No symbol) [0x00007FF7003F48D4]\n\tGetHandleVerifier [0x00007FF7008FB9A2+3610402]\n\tGetHandleVerifier [0x00007FF700951870+3962352]\n\tGetHandleVerifier [0x00007FF700949D5F+3930847]\n\tGetHandleVerifier [0x00007FF700633656+693206]\n\t(No symbol) [0x00007FF700511638]\n\t(No symbol) [0x00007FF70050D944]\n\t(No symbol) [0x00007FF70050DA72]\n\t(No symbol) [0x00007FF7004FE123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\n","statusTrace":"  File \"D:\\git\\ui_test\\test_case\\test_terminal_center.py\", line 301, in test_batch_terminal_stop_and_display\n    terminal_page.click_button('by_xpath,//span[text()=\"设备控制\"]')\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 412, in click_button\n    self.get_element(args).click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":18},"afterStages":[{"name":"terminal_page::0","time":{"start":1718679149832,"stop":1718679149832,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"sys_page::0","time":{"start":1718679149838,"stop":1718679149838,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1718679149851,"stop":1718679154612,"duration":4761},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"labels":[{"name":"epic","value":"项目hkc"},{"name":"feature","value":"terminal_center"},{"name":"tag","value":"run(order=11)"},{"name":"tag","value":"@pytest.mark.usefixtures('clear_terminal_list')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_terminal_center"},{"name":"subSuite","value":"TestTerminalCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"28316-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_terminal_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=11)","@pytest.mark.usefixtures('clear_terminal_list')"]},"source":"72a90afc45b839fa.json","parameterValues":[]}