{"uid":"7a9fa92999de2934","name":"节目单预览","fullName":"test_case.test_play_bill.TestPlayBill#test_preview_play_bill","historyId":"b9ee214bdb2525fd08dd7d1534ec4803","time":{"start":1715391605240,"stop":1715391605240,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EDF378A2+54818]\n\t(No symbol) [0x00007FF7EDEA6AD2]\n\t(No symbol) [0x00007FF7EDD5D8ED]\n\t(No symbol) [0x00007FF7EDD9F8E5]\n\t(No symbol) [0x00007FF7EDD9571F]\n\t(No symbol) [0x00007FF7EDDBEAAA]\n\t(No symbol) [0x00007FF7EDD95036]\n\t(No symbol) [0x00007FF7EDDBECC0]\n\t(No symbol) [0x00007FF7EDDD75A2]\n\t(No symbol) [0x00007FF7EDDBE883]\n\t(No symbol) [0x00007FF7EDD93691]\n\t(No symbol) [0x00007FF7EDD948D4]\n\tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\n\tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7EDFD3656+693206]\n\t(No symbol) [0x00007FF7EDEB1638]\n\t(No symbol) [0x00007FF7EDEAD944]\n\t(No symbol) [0x00007FF7EDEADA72]\n\t(No symbol) [0x00007FF7EDE9E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c752c20bd575a75c786051c890ce56bc\")>\n\n    @pytest.fixture(scope='class')\n    def init_play_bill(driver):\n        \"\"\"\n        初始化节目单，如果没有节目单，则创建普通节目，进行发布操作\n        以达到环境初始化的作用\n        \"\"\"\n        try:\n            play_bill = PlayBill()\n            program_page = ProgramPage(driver)\n            release_page = ReleasePage(driver)\n            terminal_page = TerminalPage(driver)\n            terminal_list = Terminal_List()\n            program_list = ProgramList()\n            all_play_bill_ids = play_bill.get_play_bill_ids()\n            if not all_play_bill_ids:\n                all_program_ids = program_list.get_program_list_ids()\n                all_terminal_list = terminal_list.get_terminal_list()\n                if not all_terminal_list:\n                    terminal_page.add_new_terminal()\n                if not all_program_ids:\n                    program_page.switch_to_program_management()\n                    program_page.create_general_program()\n                    program_page.hover_to_first_program()\n                    # 获取节目名称\n                    program_page.choose_first_program()\n                    program_page.multi_release()\n                    release_page.choose_terminal()\n>                   release_page.select_all_terminals()\n\ntest_case\\test_play_bill.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\release_page.py:264: in select_all_terminals\n    self.click(select_all_locator)\nbasepage\\base_page.py:247: in click\n    e1.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022F841A8C10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF7EDE9E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7EDF378A2+54818]\nE       \t(No symbol) [0x00007FF7EDEA6AD2]\nE       \t(No symbol) [0x00007FF7EDD5D8ED]\nE       \t(No symbol) [0x00007FF7EDD9F8E5]\nE       \t(No symbol) [0x00007FF7EDD9571F]\nE       \t(No symbol) [0x00007FF7EDDBEAAA]\nE       \t(No symbol) [0x00007FF7EDD95036]\nE       \t(No symbol) [0x00007FF7EDDBECC0]\nE       \t(No symbol) [0x00007FF7EDDD75A2]\nE       \t(No symbol) [0x00007FF7EDDBE883]\nE       \t(No symbol) [0x00007FF7EDD93691]\nE       \t(No symbol) [0x00007FF7EDD948D4]\nE       \tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\nE       \tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7EDFD3656+693206]\nE       \t(No symbol) [0x00007FF7EDEB1638]\nE       \t(No symbol) [0x00007FF7EDEAD944]\nE       \t(No symbol) [0x00007FF7EDEADA72]\nE       \t(No symbol) [0x00007FF7EDE9E123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1715391580777,"stop":1715391580780,"duration":3},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1715391580780,"stop":1715391597599,"duration":16819},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver","time":{"start":1715391605240,"stop":1715391614917,"duration":9677},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"play_bill_page","time":{"start":1715391614917,"stop":1715391614917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"release_page","time":{"start":1715391614917,"stop":1715391614917,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"init_play_bill","time":{"start":1715391614917,"stop":1715391755888,"duration":140971},"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EDF378A2+54818]\n\t(No symbol) [0x00007FF7EDEA6AD2]\n\t(No symbol) [0x00007FF7EDD5D8ED]\n\t(No symbol) [0x00007FF7EDD9F8E5]\n\t(No symbol) [0x00007FF7EDD9571F]\n\t(No symbol) [0x00007FF7EDDBEAAA]\n\t(No symbol) [0x00007FF7EDD95036]\n\t(No symbol) [0x00007FF7EDDBECC0]\n\t(No symbol) [0x00007FF7EDDD75A2]\n\t(No symbol) [0x00007FF7EDDBE883]\n\t(No symbol) [0x00007FF7EDD93691]\n\t(No symbol) [0x00007FF7EDD948D4]\n\tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\n\tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7EDFD3656+693206]\n\t(No symbol) [0x00007FF7EDEB1638]\n\t(No symbol) [0x00007FF7EDEAD944]\n\t(No symbol) [0x00007FF7EDEADA72]\n\t(No symbol) [0x00007FF7EDE9E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n","statusTrace":"  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\ui\\test_case\\test_play_bill.py\", line 62, in init_play_bill\n    release_page.select_all_terminals()\n  File \"D:\\ui\\pageobject\\release_page.py\", line 264, in select_all_terminals\n    self.click(select_all_locator)\n  File \"D:\\ui\\basepage\\base_page.py\", line 247, in click\n    e1.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[{"name":"点击设备接入","time":{"start":1715391616808,"stop":1715391617924,"duration":1116},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备sn码","time":{"start":1715391618426,"stop":1715391619044,"duration":618},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入设备名称","time":{"start":1715391619044,"stop":1715391619658,"duration":614},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"先点击所属机构","time":{"start":1715391619658,"stop":1715391620241,"duration":583},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框展开组织架构","time":{"start":1715391620241,"stop":1715391621302,"duration":1061},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"在下拉框进行选择","time":{"start":1715391621817,"stop":1715391623949,"duration":2132},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击保存按钮","time":{"start":1715391624461,"stop":1715391665616,"duration":41155},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击创建节目","time":{"start":1715391687303,"stop":1715391688395,"duration":1092},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"输入节目名称（普通节目）","time":{"start":1715391688395,"stop":1715391688999,"duration":604},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"选择屏幕方向","time":{"start":1715391688999,"stop":1715391689539,"duration":540},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"选择分辨率","time":{"start":1715391689539,"stop":1715391690961,"duration":1422},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"点击保存按钮","time":{"start":1715391690961,"stop":1715391691520,"duration":559},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"选择分辨率","time":{"start":1715391691520,"stop":1715391711550,"duration":20030},"status":"broken","statusMessage":"selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//span[text()=\"分辨率\"]/../..//input[@placeholder=\"请选择\"]\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EDF378A2+54818]\n\t(No symbol) [0x00007FF7EDEA6AD2]\n\t(No symbol) [0x00007FF7EDD5DA3B]\n\t(No symbol) [0x00007FF7EDD9E4FC]\n\t(No symbol) [0x00007FF7EDD9E67C]\n\t(No symbol) [0x00007FF7EDDD9627]\n\t(No symbol) [0x00007FF7EDDBEAEF]\n\t(No symbol) [0x00007FF7EDDD75A2]\n\t(No symbol) [0x00007FF7EDDBE883]\n\t(No symbol) [0x00007FF7EDD93691]\n\t(No symbol) [0x00007FF7EDD948D4]\n\tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\n\tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7EDFD3656+693206]\n\t(No symbol) [0x00007FF7EDEB1638]\n\t(No symbol) [0x00007FF7EDEAD944]\n\t(No symbol) [0x00007FF7EDEADA72]\n\t(No symbol) [0x00007FF7EDE9E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n","statusTrace":"  File \"D:\\ui\\pageobject\\program_page.py\", line 76, in create_general_program\n    self.click_resolution()\n  File \"D:\\ui\\pageobject\\program_page.py\", line 191, in click_resolution\n    self.click(resolution_locator)\n  File \"D:\\ui\\basepage\\base_page.py\", line 246, in click\n    e1 = self.get_element(args)\n  File \"D:\\ui\\basepage\\base_page.py\", line 133, in get_element\n    w_element = self.driver.find_element(By.XPATH, value=args_value)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 742, in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0},{"name":"在编辑器中进行保存","time":{"start":1715391711565,"stop":1715391716904,"duration":5339},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":14}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7EDF378A2+54818]\n\t(No symbol) [0x00007FF7EDEA6AD2]\n\t(No symbol) [0x00007FF7EDD5D8ED]\n\t(No symbol) [0x00007FF7EDD9F8E5]\n\t(No symbol) [0x00007FF7EDD9571F]\n\t(No symbol) [0x00007FF7EDDBEAAA]\n\t(No symbol) [0x00007FF7EDD95036]\n\t(No symbol) [0x00007FF7EDDBECC0]\n\t(No symbol) [0x00007FF7EDDD75A2]\n\t(No symbol) [0x00007FF7EDDBE883]\n\t(No symbol) [0x00007FF7EDD93691]\n\t(No symbol) [0x00007FF7EDD948D4]\n\tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\n\tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7EDFD3656+693206]\n\t(No symbol) [0x00007FF7EDEB1638]\n\t(No symbol) [0x00007FF7EDEAD944]\n\t(No symbol) [0x00007FF7EDEADA72]\n\t(No symbol) [0x00007FF7EDE9E123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"c752c20bd575a75c786051c890ce56bc\")>\n\n    @pytest.fixture(scope='class')\n    def init_play_bill(driver):\n        \"\"\"\n        初始化节目单，如果没有节目单，则创建普通节目，进行发布操作\n        以达到环境初始化的作用\n        \"\"\"\n        try:\n            play_bill = PlayBill()\n            program_page = ProgramPage(driver)\n            release_page = ReleasePage(driver)\n            terminal_page = TerminalPage(driver)\n            terminal_list = Terminal_List()\n            program_list = ProgramList()\n            all_play_bill_ids = play_bill.get_play_bill_ids()\n            if not all_play_bill_ids:\n                all_program_ids = program_list.get_program_list_ids()\n                all_terminal_list = terminal_list.get_terminal_list()\n                if not all_terminal_list:\n                    terminal_page.add_new_terminal()\n                if not all_program_ids:\n                    program_page.switch_to_program_management()\n                    program_page.create_general_program()\n                    program_page.hover_to_first_program()\n                    # 获取节目名称\n                    program_page.choose_first_program()\n                    program_page.multi_release()\n                    release_page.choose_terminal()\n>                   release_page.select_all_terminals()\n\ntest_case\\test_play_bill.py:62: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\release_page.py:264: in select_all_terminals\n    self.click(select_all_locator)\nbasepage\\base_page.py:247: in click\n    e1.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000022F841A8C10>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF7EDE9E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7EDF378A2+54818]\nE       \t(No symbol) [0x00007FF7EDEA6AD2]\nE       \t(No symbol) [0x00007FF7EDD5D8ED]\nE       \t(No symbol) [0x00007FF7EDD9F8E5]\nE       \t(No symbol) [0x00007FF7EDD9571F]\nE       \t(No symbol) [0x00007FF7EDDBEAAA]\nE       \t(No symbol) [0x00007FF7EDD95036]\nE       \t(No symbol) [0x00007FF7EDDBECC0]\nE       \t(No symbol) [0x00007FF7EDDD75A2]\nE       \t(No symbol) [0x00007FF7EDDBE883]\nE       \t(No symbol) [0x00007FF7EDD93691]\nE       \t(No symbol) [0x00007FF7EDD948D4]\nE       \tGetHandleVerifier [0x00007FF7EE29B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7EE2F1870+3962352]\nE       \tGetHandleVerifier [0x00007FF7EE2E9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7EDFD3656+693206]\nE       \t(No symbol) [0x00007FF7EDEB1638]\nE       \t(No symbol) [0x00007FF7EDEAD944]\nE       \t(No symbol) [0x00007FF7EDEADA72]\nE       \t(No symbol) [0x00007FF7EDE9E123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException","steps":[],"attachments":[{"uid":"167b213756d59a0c","name":"log","source":"167b213756d59a0c.txt","type":"text/plain","size":392}],"parameters":[],"hasContent":true,"shouldDisplayMessage":true,"attachmentsCount":1,"stepsCount":0},"afterStages":[{"name":"play_bill_page::0","time":{"start":1715391756133,"stop":1715391756133,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"release_page::0","time":{"start":1715391756139,"stop":1715391756139,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1715396765020,"stop":1715396767962,"duration":2942},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0},{"name":"driver::0","time":{"start":1715396770846,"stop":1715396773665,"duration":2819},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0}],"labels":[{"name":"epic","value":"项目hkc"},{"name":"feature","value":"play bill list"},{"name":"tag","value":"@pytest.mark.usefixtures('generate_one_program')"},{"name":"tag","value":"run(order=1)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_play_bill"},{"name":"subSuite","value":"TestPlayBill"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"2156-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_play_bill"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=1)","@pytest.mark.usefixtures('generate_one_program')"]},"source":"7a9fa92999de2934.json","parameterValues":[]}