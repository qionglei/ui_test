{"name": "查看设备中心-组织架构树，折叠和展开所有门店", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF78E7678A2+54818]\n\t(No symbol) [0x00007FF78E6D6AD2]\n\t(No symbol) [0x00007FF78E58D8ED]\n\t(No symbol) [0x00007FF78E5CF8E5]\n\t(No symbol) [0x00007FF78E5C571F]\n\t(No symbol) [0x00007FF78E5EEAAA]\n\t(No symbol) [0x00007FF78E5C5036]\n\t(No symbol) [0x00007FF78E5EECC0]\n\t(No symbol) [0x00007FF78E6075A2]\n\t(No symbol) [0x00007FF78E5EE883]\n\t(No symbol) [0x00007FF78E5C3691]\n\t(No symbol) [0x00007FF78E5C48D4]\n\tGetHandleVerifier [0x00007FF78EACB9A2+3610402]\n\tGetHandleVerifier [0x00007FF78EB21870+3962352]\n\tGetHandleVerifier [0x00007FF78EB19D5F+3930847]\n\tGetHandleVerifier [0x00007FF78E803656+693206]\n\t(No symbol) [0x00007FF78E6E1638]\n\t(No symbol) [0x00007FF78E6DD944]\n\t(No symbol) [0x00007FF78E6DDA72]\n\t(No symbol) [0x00007FF78E6CE123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]", "trace": "self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000027059429120>\n\n    @allure.title(\"查看设备中心-组织架构树，折叠和展开所有门店\")\n    @pytest.mark.run(order=14)\n    def test_terminal_expl_org(self):\n        # sql_execute()\n        terminal_page = self.terminal_page\n        terminal_page.refresh()\n        terminal_page.switch_to_terminal_center()\n        # terminal_page.add_new_terminal()\n        with step(\"点击组织架构按钮\"):\n            terminal_page.click_terminal_org_tree()\n    \n        with step(\"折叠所有门店\"):\n>           terminal_page.click_button('by_xpath,//i[@class=\"el-icon el-tree-node__expand-icon expanded\"]')\n\ntest_case\\test_terminal_center.py:491: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\nbasepage\\base_page.py:328: in click_button\n    self.get_element(args).click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000002707FF19180>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element not interactable\",\"message\":\"element not interactable\\\\n  (Sessio...07FF78E6CE123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFEE159257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFEE202AA58+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF78E7678A2+54818]\nE       \t(No symbol) [0x00007FF78E6D6AD2]\nE       \t(No symbol) [0x00007FF78E58D8ED]\nE       \t(No symbol) [0x00007FF78E5CF8E5]\nE       \t(No symbol) [0x00007FF78E5C571F]\nE       \t(No symbol) [0x00007FF78E5EEAAA]\nE       \t(No symbol) [0x00007FF78E5C5036]\nE       \t(No symbol) [0x00007FF78E5EECC0]\nE       \t(No symbol) [0x00007FF78E6075A2]\nE       \t(No symbol) [0x00007FF78E5EE883]\nE       \t(No symbol) [0x00007FF78E5C3691]\nE       \t(No symbol) [0x00007FF78E5C48D4]\nE       \tGetHandleVerifier [0x00007FF78EACB9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF78EB21870+3962352]\nE       \tGetHandleVerifier [0x00007FF78EB19D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF78E803656+693206]\nE       \t(No symbol) [0x00007FF78E6E1638]\nE       \t(No symbol) [0x00007FF78E6DD944]\nE       \t(No symbol) [0x00007FF78E6DDA72]\nE       \t(No symbol) [0x00007FF78E6CE123]\nE       \tBaseThreadInitThunk [0x00007FFEE159257D+29]\nE       \tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementNotInteractableException"}, "steps": [{"name": "点击组织架构按钮", "status": "passed", "start": 1715764238454, "stop": 1715764238892}, {"name": "折叠所有门店", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementNotInteractableException: Message: element not interactable\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF78E7678A2+54818]\n\t(No symbol) [0x00007FF78E6D6AD2]\n\t(No symbol) [0x00007FF78E58D8ED]\n\t(No symbol) [0x00007FF78E5CF8E5]\n\t(No symbol) [0x00007FF78E5C571F]\n\t(No symbol) [0x00007FF78E5EEAAA]\n\t(No symbol) [0x00007FF78E5C5036]\n\t(No symbol) [0x00007FF78E5EECC0]\n\t(No symbol) [0x00007FF78E6075A2]\n\t(No symbol) [0x00007FF78E5EE883]\n\t(No symbol) [0x00007FF78E5C3691]\n\t(No symbol) [0x00007FF78E5C48D4]\n\tGetHandleVerifier [0x00007FF78EACB9A2+3610402]\n\tGetHandleVerifier [0x00007FF78EB21870+3962352]\n\tGetHandleVerifier [0x00007FF78EB19D5F+3930847]\n\tGetHandleVerifier [0x00007FF78E803656+693206]\n\t(No symbol) [0x00007FF78E6E1638]\n\t(No symbol) [0x00007FF78E6DD944]\n\t(No symbol) [0x00007FF78E6DDA72]\n\t(No symbol) [0x00007FF78E6CE123]\n\tBaseThreadInitThunk [0x00007FFEE159257D+29]\n\tRtlUserThreadStart [0x00007FFEE202AA58+40]\n\n", "trace": "  File \"D:\\ui\\test_case\\test_terminal_center.py\", line 491, in test_terminal_expl_org\n    terminal_page.click_button('by_xpath,//i[@class=\"el-icon el-tree-node__expand-icon expanded\"]')\n  File \"D:\\ui\\basepage\\base_page.py\", line 328, in click_button\n    self.get_element(args).click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1715764238892, "stop": 1715764258965}], "start": 1715764237735, "stop": 1715764258966, "uuid": "dbda7fbb-6e5b-4046-a045-19b56f98f414", "historyId": "6da0ea54c2e32e4066492fc630e35b5c", "testCaseId": "6da0ea54c2e32e4066492fc630e35b5c", "fullName": "test_case.test_terminal_center.TestTerminalCenter#test_terminal_expl_org", "labels": [{"name": "feature", "value": "terminal_center"}, {"name": "epic", "value": "项目hkc"}, {"name": "tag", "value": "run(order=14)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('env')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_terminal_center"}, {"name": "subSuite", "value": "TestTerminalCenter"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "14580-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_terminal_center"}]}