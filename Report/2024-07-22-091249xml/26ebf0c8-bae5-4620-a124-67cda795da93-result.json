{"name": "取消绑定设备", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[text()=\" 设备中心\"]/../../.\"}\n  (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nStacktrace:\n\tGetHandleVerifier [0x00007FF70C4278A2+54818]\n\t(No symbol) [0x00007FF70C396AD2]\n\t(No symbol) [0x00007FF70C24DA3B]\n\t(No symbol) [0x00007FF70C28E4FC]\n\t(No symbol) [0x00007FF70C28E67C]\n\t(No symbol) [0x00007FF70C2C9627]\n\t(No symbol) [0x00007FF70C2AEAEF]\n\t(No symbol) [0x00007FF70C2C75A2]\n\t(No symbol) [0x00007FF70C2AE883]\n\t(No symbol) [0x00007FF70C283691]\n\t(No symbol) [0x00007FF70C2848D4]\n\tGetHandleVerifier [0x00007FF70C78B9A2+3610402]\n\tGetHandleVerifier [0x00007FF70C7E1870+3962352]\n\tGetHandleVerifier [0x00007FF70C7D9D5F+3930847]\n\tGetHandleVerifier [0x00007FF70C4C3656+693206]\n\t(No symbol) [0x00007FF70C3A1638]\n\t(No symbol) [0x00007FF70C39D944]\n\t(No symbol) [0x00007FF70C39DA72]\n\t(No symbol) [0x00007FF70C38E123]\n\tBaseThreadInitThunk [0x00007FF949A7257D+29]\n\tRtlUserThreadStart [0x00007FF949BCAF28+40]", "trace": "terminal_page = <pageobject.terminal_page.TerminalPage object at 0x00000231CCFD13C0>\nsys_page = <pageobject.system_page.SystemPage object at 0x00000231CCFD1C30>\n\n    @pytest.fixture(scope=\"function\")\n    def terminal_set_up(terminal_page, sys_page):\n        sn_id = random.randint(1, 100000)\n        sn_name = \"test\" + str(sn_id)\n>       terminal_page.switch_to_terminal_center()\n\ntest_case\\test_terminal_center.py:48: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\terminal_page.py:26: in switch_to_terminal_center\n    focus_ele = self.get_element(focus)\nbasepage\\base_page.py:245: in get_element\n    element = self.driver.find_element(By.XPATH, value=selector_value)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:742: in find_element\n    return self.execute(Command.FIND_ELEMENT, {\"using\": by, \"value\": value})[\"value\"]\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x00000231CCFD1CC0>\nresponse = {'status': 404, 'value': '{\"value\":{\"error\":\"no such element\",\"message\":\"no such element: Unable to locate element: {\\...07FF70C38E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FF949A7257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FF949BCAF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.NoSuchElementException: Message: no such element: Unable to locate element: {\"method\":\"xpath\",\"selector\":\"//div[text()=\" 设备中心\"]/../../.\"}\nE         (Session info: chrome=118.0.5993.118); For documentation on this error, please visit: https://www.selenium.dev/documentation/webdriver/troubleshooting/errors#no-such-element-exception\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF70C4278A2+54818]\nE       \t(No symbol) [0x00007FF70C396AD2]\nE       \t(No symbol) [0x00007FF70C24DA3B]\nE       \t(No symbol) [0x00007FF70C28E4FC]\nE       \t(No symbol) [0x00007FF70C28E67C]\nE       \t(No symbol) [0x00007FF70C2C9627]\nE       \t(No symbol) [0x00007FF70C2AEAEF]\nE       \t(No symbol) [0x00007FF70C2C75A2]\nE       \t(No symbol) [0x00007FF70C2AE883]\nE       \t(No symbol) [0x00007FF70C283691]\nE       \t(No symbol) [0x00007FF70C2848D4]\nE       \tGetHandleVerifier [0x00007FF70C78B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF70C7E1870+3962352]\nE       \tGetHandleVerifier [0x00007FF70C7D9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF70C4C3656+693206]\nE       \t(No symbol) [0x00007FF70C3A1638]\nE       \t(No symbol) [0x00007FF70C39D944]\nE       \t(No symbol) [0x00007FF70C39DA72]\nE       \t(No symbol) [0x00007FF70C38E123]\nE       \tBaseThreadInitThunk [0x00007FF949A7257D+29]\nE       \tRtlUserThreadStart [0x00007FF949BCAF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: NoSuchElementException"}, "start": 1721611404545, "stop": 1721611404545, "uuid": "f4d45897-dd7c-450e-b9ce-6052a7eb9aea", "historyId": "bc825f4296fabdd4a9f849fdd4ec0131", "testCaseId": "bc825f4296fabdd4a9f849fdd4ec0131", "fullName": "test_case.test_terminal_center.TestTerminalCenter#test_cancel_bind_terminal", "labels": [{"name": "feature", "value": "terminal_center"}, {"name": "epic", "value": "项目hkc"}, {"name": "tag", "value": "run(order=20)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('terminal_set_up')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_terminal_center"}, {"name": "subSuite", "value": "TestTerminalCenter"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "14272-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_terminal_center"}]}