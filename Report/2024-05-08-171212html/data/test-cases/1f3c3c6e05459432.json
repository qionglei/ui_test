{"uid":"1f3c3c6e05459432","name":"新增一个竖屏的联屏节目","fullName":"test_case.test_program_management.TestProgramManagement#test_create_relevance_program_hard","historyId":"eb851a59db0459b9a60a4a7b03a2ee85","time":{"start":1715160281549,"stop":1715160312034,"duration":30485},"status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_case.test_program_management.TestProgramManagement object at 0x0000017AEF5F7C40>\n\n    @allure.title(\"新增一个竖屏的联屏节目\")\n    @pytest.mark.run(order=7)\n    def test_create_relevance_program_hard(self):\n        program_page = self.program_page\n        program_page.refresh()\n        # 联屏节目随机名称\n        ran_int = random.randint(100, 999)\n        relevance_program_name = \"test_联屏竖屏_\" + str(ran_int)\n    \n        # 行、列随机\n        randow_row = str(random.randint(1, 5))\n        randow_col = str(random.randint(1, 4))\n        with step(\"点击创建节目\"):\n            program_page.switch_to_program_management()\n            program_page.click_create_program()\n    \n        with step(\"切换到联屏节目tab上\"):\n            program_page.relevance_program_tab()\n    \n        with step(\"输入联屏节目的节目名称\"):\n            program_page.input_program_name(relevance_program_name)\n    \n        with step(\"输入屏幕组合行和列值\"):\n            # time.sleep(5)\n            program_page.row_numbers(randow_row)\n            time.sleep(0.5)\n            program_page.col_numbers(randow_col)\n    \n        with step(\"切换到竖屏tab上\"):\n            program_page.screen_direction(\"y\")\n    \n        time.sleep(2)\n        with step(\"创建联屏节目，点击选择素材\"):\n            program_page.choose_relevance_media()\n    \n        win_size = program_page.get_window_size()\n        program_page.maxsize_window()\n    \n        #先判断是不是有素材：\n        media_List = MediaList()\n        list_media = media_List.get_media_list()\n        if list_media:\n            with step(\"上传一个素材\"):\n                program_page.upload_media()\n    \n        with step(\"选择一个素材\"):\n            program_page.hover_to_media()\n>           program_page.choose_media()\n\ntest_case\\test_program_management.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageobject.program_page.ProgramPage object at 0x0000017AFEAAC9D0>\n\n    def choose_media(self):\n        \"\"\"\n        选择素材\n        :return:\n        \"\"\"\n        # 判断对号是否可见,等待可见后，再进行操作\n        driver = self.driver\n        all_selectable = 'by_xpath,//div[@class=\"mask\"]/div/img'\n        # if self.element_exist(all_selectable):\n        #     wait = WebDriverWait(driver, 10)  # 等待最多10秒\n        #     click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/div/img')))\n        #     click_element.click()\n        # else:\n        #     pass\n        all_selectable_elements = self.get_elements(all_selectable)\n        try:\n>           first_selectable_element = all_selectable_elements[0]\nE           IndexError: list index out of range\n\npageobject\\media_page.py:339: IndexError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1715159535458,"stop":1715159535474,"duration":16},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver","time":{"start":1715159535474,"stop":1715159544292,"duration":8818},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"program_management_set_up","time":{"start":1715160280549,"stop":1715160281549,"duration":1000},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"program_page","time":{"start":1715160280549,"stop":1715160280549,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"testStage":{"status":"broken","statusMessage":"IndexError: list index out of range","statusTrace":"self = <test_case.test_program_management.TestProgramManagement object at 0x0000017AEF5F7C40>\n\n    @allure.title(\"新增一个竖屏的联屏节目\")\n    @pytest.mark.run(order=7)\n    def test_create_relevance_program_hard(self):\n        program_page = self.program_page\n        program_page.refresh()\n        # 联屏节目随机名称\n        ran_int = random.randint(100, 999)\n        relevance_program_name = \"test_联屏竖屏_\" + str(ran_int)\n    \n        # 行、列随机\n        randow_row = str(random.randint(1, 5))\n        randow_col = str(random.randint(1, 4))\n        with step(\"点击创建节目\"):\n            program_page.switch_to_program_management()\n            program_page.click_create_program()\n    \n        with step(\"切换到联屏节目tab上\"):\n            program_page.relevance_program_tab()\n    \n        with step(\"输入联屏节目的节目名称\"):\n            program_page.input_program_name(relevance_program_name)\n    \n        with step(\"输入屏幕组合行和列值\"):\n            # time.sleep(5)\n            program_page.row_numbers(randow_row)\n            time.sleep(0.5)\n            program_page.col_numbers(randow_col)\n    \n        with step(\"切换到竖屏tab上\"):\n            program_page.screen_direction(\"y\")\n    \n        time.sleep(2)\n        with step(\"创建联屏节目，点击选择素材\"):\n            program_page.choose_relevance_media()\n    \n        win_size = program_page.get_window_size()\n        program_page.maxsize_window()\n    \n        #先判断是不是有素材：\n        media_List = MediaList()\n        list_media = media_List.get_media_list()\n        if list_media:\n            with step(\"上传一个素材\"):\n                program_page.upload_media()\n    \n        with step(\"选择一个素材\"):\n            program_page.hover_to_media()\n>           program_page.choose_media()\n\ntest_case\\test_program_management.py:245: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <pageobject.program_page.ProgramPage object at 0x0000017AFEAAC9D0>\n\n    def choose_media(self):\n        \"\"\"\n        选择素材\n        :return:\n        \"\"\"\n        # 判断对号是否可见,等待可见后，再进行操作\n        driver = self.driver\n        all_selectable = 'by_xpath,//div[@class=\"mask\"]/div/img'\n        # if self.element_exist(all_selectable):\n        #     wait = WebDriverWait(driver, 10)  # 等待最多10秒\n        #     click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/div/img')))\n        #     click_element.click()\n        # else:\n        #     pass\n        all_selectable_elements = self.get_elements(all_selectable)\n        try:\n>           first_selectable_element = all_selectable_elements[0]\nE           IndexError: list index out of range\n\npageobject\\media_page.py:339: IndexError","steps":[{"name":"点击创建节目","time":{"start":1715160281807,"stop":1715160283542,"duration":1735},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"切换到联屏节目tab上","time":{"start":1715160283542,"stop":1715160284122,"duration":580},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入联屏节目的节目名称","time":{"start":1715160284122,"stop":1715160284738,"duration":616},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"输入屏幕组合行和列值","time":{"start":1715160284738,"stop":1715160286413,"duration":1675},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"切换到竖屏tab上","time":{"start":1715160286413,"stop":1715160287001,"duration":588},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"创建联屏节目，点击选择素材","time":{"start":1715160289010,"stop":1715160289564,"duration":554},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"选择一个素材","time":{"start":1715160289689,"stop":1715160312034,"duration":22345},"status":"broken","statusMessage":"IndexError: list index out of range\n","statusTrace":"  File \"D:\\ui\\test_case\\test_program_management.py\", line 245, in test_create_relevance_program_hard\n    program_page.choose_media()\n  File \"D:\\ui\\pageobject\\media_page.py\", line 339, in choose_media\n    first_selectable_element = all_selectable_elements[0]\n","steps":[],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":true}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":7,"attachmentsCount":0,"shouldDisplayMessage":true},"afterStages":[{"name":"program_page::0","time":{"start":1715160312049,"stop":1715160312049,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false},{"name":"driver::0","time":{"start":1715161643760,"stop":1715161646408,"duration":2648},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"attachmentsCount":0,"shouldDisplayMessage":false}],"labels":[{"name":"epic","value":"项目hkc"},{"name":"feature","value":"program management"},{"name":"tag","value":"run(order=7)"},{"name":"tag","value":"@pytest.mark.usefixtures('program_management_set_up')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_program_management"},{"name":"subSuite","value":"TestProgramManagement"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"46136-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_program_management"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=7)","@pytest.mark.usefixtures('program_management_set_up')"]},"source":"1f3c3c6e05459432.json","parameterValues":[]}