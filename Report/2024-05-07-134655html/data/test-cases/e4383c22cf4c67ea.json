{"uid":"e4383c22cf4c67ea","name":"预览素材","fullName":"test_case.test_media_center.TestMediaCenter#test_delete_multi_file","historyId":"54bc23506364584991d03f5085bafab3","time":{"start":1715061580798,"stop":1715061609506,"duration":28708},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_case.test_media_center.TestMediaCenter object at 0x0000024073357340>\n\n    @pytest.mark.run(order=8)\n    @pytest.mark.usefixtures(\"media_set_up\")\n    @allure.title(\"预览素材\")\n    def test_delete_multi_file(self):\n        media_page = self.media_page\n        media_page.switch_to_media_center()\n        # 通用方法，进行素材上传\n        media_page.upload_media()\n        try:\n            with step(\"1、先鼠标hover到素材上面\"):\n                media_page.hover_to_media()\n    \n        except Exception:\n            media_page.upload_media()\n    \n        with step(\"点击预览按钮\"):\n>           media_page.media_preview()\n\ntest_case\\test_media_center.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:355: in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5d0fc47081b44c48e0cccb1a0bbebd28\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002401BE7B2E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1715060817561,"stop":1715060817561,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"driver","time":{"start":1715060817561,"stop":1715060826252,"duration":8691},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"media_page","time":{"start":1715061578782,"stop":1715061578782,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"media_set_up","time":{"start":1715061578783,"stop":1715061580797,"duration":2014},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_case.test_media_center.TestMediaCenter object at 0x0000024073357340>\n\n    @pytest.mark.run(order=8)\n    @pytest.mark.usefixtures(\"media_set_up\")\n    @allure.title(\"预览素材\")\n    def test_delete_multi_file(self):\n        media_page = self.media_page\n        media_page.switch_to_media_center()\n        # 通用方法，进行素材上传\n        media_page.upload_media()\n        try:\n            with step(\"1、先鼠标hover到素材上面\"):\n                media_page.hover_to_media()\n    \n        except Exception:\n            media_page.upload_media()\n    \n        with step(\"点击预览按钮\"):\n>           media_page.media_preview()\n\ntest_case\\test_media_center.py:213: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:355: in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"5d0fc47081b44c48e0cccb1a0bbebd28\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002401BE7B2E0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[{"name":"点击上传按钮","time":{"start":1715061581441,"stop":1715061582744,"duration":1303},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"进行文件上传","time":{"start":1715061582744,"stop":1715061590368,"duration":7624},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"当进度为100%时，则关闭上传弹框","time":{"start":1715061590368,"stop":1715061593563,"duration":3195},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"1、先鼠标hover到素材上面","time":{"start":1715061593563,"stop":1715061598838,"duration":5275},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"点击预览按钮","time":{"start":1715061598838,"stop":1715061609494,"duration":10656},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"D:\\ui\\test_case\\test_media_center.py\", line 213, in test_delete_multi_file\n    media_page.media_preview()\n  File \"D:\\ui\\pageobject\\media_page.py\", line 355, in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":5,"hasContent":true},"afterStages":[{"name":"media_page::0","time":{"start":1715061609541,"stop":1715061609541,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1715062470589,"stop":1715062473573,"duration":2984},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"media center"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"@pytest.mark.usefixtures('media_set_up')"},{"name":"tag","value":"run(order=8)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_media_center"},{"name":"subSuite","value":"TestMediaCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"45908-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_media_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('media_set_up')","run(order=8)"]},"source":"e4383c22cf4c67ea.json","parameterValues":[]}