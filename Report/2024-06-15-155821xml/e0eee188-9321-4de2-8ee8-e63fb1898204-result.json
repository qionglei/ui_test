{"name": "进行节目单的编辑", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-06d105f8=\"\" class=\"title\">...</div> is not clickable at point (490, 159). Other element would receive the click: <td class=\"el-table_2_column_18 is-center el-table__cell\" rowspan=\"1\" colspan=\"1\">...</td>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7313178A2+54818]\n\t(No symbol) [0x00007FF731286AD2]\n\t(No symbol) [0x00007FF73113DA3B]\n\t(No symbol) [0x00007FF7311847CB]\n\t(No symbol) [0x00007FF731182B99]\n\t(No symbol) [0x00007FF731180968]\n\t(No symbol) [0x00007FF73117FA23]\n\t(No symbol) [0x00007FF73117571F]\n\t(No symbol) [0x00007FF73119EAAA]\n\t(No symbol) [0x00007FF731175036]\n\t(No symbol) [0x00007FF73119ECC0]\n\t(No symbol) [0x00007FF7311B75A2]\n\t(No symbol) [0x00007FF73119E883]\n\t(No symbol) [0x00007FF731173691]\n\t(No symbol) [0x00007FF7311748D4]\n\tGetHandleVerifier [0x00007FF73167B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7316D1870+3962352]\n\tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7313B3656+693206]\n\t(No symbol) [0x00007FF731291638]\n\t(No symbol) [0x00007FF73128D944]\n\t(No symbol) [0x00007FF73128DA72]\n\t(No symbol) [0x00007FF73127E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]", "trace": "self = <test_case.test_play_bill.TestPlayBill object at 0x00000247511602E0>\n\n    @pytest.mark.run(order=6)\n    @allure.title(\"进行节目单的编辑\")\n    @pytest.mark.usefixtures(\"generate_one_program\")\n    def test_edit_play_bill(self):\n        play_bill_page = self.play_bill_page\n        release_page = self.release_page\n        terminal_list = self.terminal_list\n        all_terminal = terminal_list.get_terminal_list()\n        print(\"all_terminal:\",all_terminal)\n        sn_api = random.randint(10000,100000000)\n        if all_terminal ==[]:\n            terminal_list.add_terminal_api(sn_api)\n    \n        set_up_play_bill = PlayBill()\n        if set_up_play_bill.get_play_bill_ids() != []:\n            set_up_play_bill.clear_play_bill()\n            release_page.refresh()\n    \n        all_terminal = terminal_list.get_terminal_list()\n        print(\"all_terminal---new:\", all_terminal)\n    \n        time.sleep(5)\n        with step(\"侧边栏切到到发布管理\"):\n            release_page.refresh()\n            play_bill_page.switch_to_release_management()\n    \n        time.sleep(5)\n        with step(\"发布管理中，切到节目单\"):\n            play_bill_page.switch_to_play_bill()\n    \n        time.sleep(5)\n        with step(\"点击节目单引用按钮\"):\n            play_bill_page.copy_play_bill()\n    \n        time.sleep(5)\n        with step(\"点击确认按钮\"):\n            play_bill_page.confirm_copy_button()\n            print(\"点击确认按钮成功\")\n    \n        time.sleep(5)\n        with step(\"点击暂存按钮\"):\n            release_page.temporary_storage()\n    \n        time.sleep(5)\n        with step(\"发布管理中，切到节目单\"):\n>           play_bill_page.switch_to_play_bill()\n\ntest_case\\test_play_bill.py:354: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\play_bill_page.py:39: in switch_to_play_bill\n    self.click(play_bill_locator)\nbasepage\\base_page.py:389: in click\n    element_to_click.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000024777C02530>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF73127E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-06d105f8=\"\" class=\"title\">...</div> is not clickable at point (490, 159). Other element would receive the click: <td class=\"el-table_2_column_18 is-center el-table__cell\" rowspan=\"1\" colspan=\"1\">...</td>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7313178A2+54818]\nE       \t(No symbol) [0x00007FF731286AD2]\nE       \t(No symbol) [0x00007FF73113DA3B]\nE       \t(No symbol) [0x00007FF7311847CB]\nE       \t(No symbol) [0x00007FF731182B99]\nE       \t(No symbol) [0x00007FF731180968]\nE       \t(No symbol) [0x00007FF73117FA23]\nE       \t(No symbol) [0x00007FF73117571F]\nE       \t(No symbol) [0x00007FF73119EAAA]\nE       \t(No symbol) [0x00007FF731175036]\nE       \t(No symbol) [0x00007FF73119ECC0]\nE       \t(No symbol) [0x00007FF7311B75A2]\nE       \t(No symbol) [0x00007FF73119E883]\nE       \t(No symbol) [0x00007FF731173691]\nE       \t(No symbol) [0x00007FF7311748D4]\nE       \tGetHandleVerifier [0x00007FF73167B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7316D1870+3962352]\nE       \tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7313B3656+693206]\nE       \t(No symbol) [0x00007FF731291638]\nE       \t(No symbol) [0x00007FF73128D944]\nE       \t(No symbol) [0x00007FF73128DA72]\nE       \t(No symbol) [0x00007FF73127E123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "侧边栏切到到发布管理", "status": "passed", "start": 1718438562490, "stop": 1718438562704}, {"name": "发布管理中，切到节目单", "status": "passed", "start": 1718438567718, "stop": 1718438567791}, {"name": "点击节目单引用按钮", "status": "passed", "start": 1718438572793, "stop": 1718438573875}, {"name": "点击确认按钮", "status": "passed", "start": 1718438578886, "stop": 1718438578942}, {"name": "点击暂存按钮", "status": "passed", "start": 1718438583953, "stop": 1718438584690}, {"name": "发布管理中，切到节目单", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-06d105f8=\"\" class=\"title\">...</div> is not clickable at point (490, 159). Other element would receive the click: <td class=\"el-table_2_column_18 is-center el-table__cell\" rowspan=\"1\" colspan=\"1\">...</td>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7313178A2+54818]\n\t(No symbol) [0x00007FF731286AD2]\n\t(No symbol) [0x00007FF73113DA3B]\n\t(No symbol) [0x00007FF7311847CB]\n\t(No symbol) [0x00007FF731182B99]\n\t(No symbol) [0x00007FF731180968]\n\t(No symbol) [0x00007FF73117FA23]\n\t(No symbol) [0x00007FF73117571F]\n\t(No symbol) [0x00007FF73119EAAA]\n\t(No symbol) [0x00007FF731175036]\n\t(No symbol) [0x00007FF73119ECC0]\n\t(No symbol) [0x00007FF7311B75A2]\n\t(No symbol) [0x00007FF73119E883]\n\t(No symbol) [0x00007FF731173691]\n\t(No symbol) [0x00007FF7311748D4]\n\tGetHandleVerifier [0x00007FF73167B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7316D1870+3962352]\n\tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7313B3656+693206]\n\t(No symbol) [0x00007FF731291638]\n\t(No symbol) [0x00007FF73128D944]\n\t(No symbol) [0x00007FF73128DA72]\n\t(No symbol) [0x00007FF73127E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\n", "trace": "  File \"D:\\git\\ui_test\\test_case\\test_play_bill.py\", line 354, in test_edit_play_bill\n    play_bill_page.switch_to_play_bill()\n  File \"D:\\git\\ui_test\\pageobject\\play_bill_page.py\", line 39, in switch_to_play_bill\n    self.click(play_bill_locator)\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 389, in click\n    element_to_click.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1718438589691, "stop": 1718438590787}], "start": 1718438556897, "stop": 1718438590789, "uuid": "bba8616d-b291-4535-a89b-0a9f08d3616d", "historyId": "abccc3c0d89cf24a31c56e4f4c600b13", "testCaseId": "abccc3c0d89cf24a31c56e4f4c600b13", "fullName": "test_case.test_play_bill.TestPlayBill#test_edit_play_bill", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "play bill list"}, {"name": "tag", "value": "@pytest.mark.usefixtures('generate_one_program')"}, {"name": "tag", "value": "run(order=6)"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_play_bill"}, {"name": "subSuite", "value": "TestPlayBill"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "15376-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_play_bill"}]}