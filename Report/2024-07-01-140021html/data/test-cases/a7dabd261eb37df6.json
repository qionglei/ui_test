{"uid":"a7dabd261eb37df6","name":"在节目编排中，选择节目","fullName":"test_case.test_release_management.TestReleaseStrategy#test_add_program","historyId":"6e706fb18066d902fbfdc248e956a0e8","time":{"start":1719813778137,"stop":1719813861065,"duration":82928},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6214D78A2+54818]\n\t(No symbol) [0x00007FF621446AD2]\n\t(No symbol) [0x00007FF6212FDA3B]\n\t(No symbol) [0x00007FF62133E4FC]\n\t(No symbol) [0x00007FF62133E67C]\n\t(No symbol) [0x00007FF621379627]\n\t(No symbol) [0x00007FF62135EAEF]\n\t(No symbol) [0x00007FF6213775A2]\n\t(No symbol) [0x00007FF62135E883]\n\t(No symbol) [0x00007FF621333691]\n\t(No symbol) [0x00007FF6213348D4]\n\tGetHandleVerifier [0x00007FF62183B9A2+3610402]\n\tGetHandleVerifier [0x00007FF621891870+3962352]\n\tGetHandleVerifier [0x00007FF621889D5F+3930847]\n\tGetHandleVerifier [0x00007FF621573656+693206]\n\t(No symbol) [0x00007FF621451638]\n\t(No symbol) [0x00007FF62144D944]\n\t(No symbol) [0x00007FF62144DA72]\n\t(No symbol) [0x00007FF62143E123]\n\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\n\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]","statusTrace":"self = <pageobject.media_page.MediaPage object at 0x000001DF3DE63F70>\n\n    def hover_to_media(self):\n        \"\"\"\n        素材列表中，鼠标hover到素材遮罩上面去\n        \"\"\"\n        hover_locator = 'by_xpath,//div[@class=\"img-box\"]'\n        try:\n            eles = self.get_elements(hover_locator)\n>           first_ele = eles[0]\nE           IndexError: list index out of range\n\npageobject\\media_page.py:328: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_release_management.TestReleaseStrategy object at 0x000001DF16288910>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c512ea95c333449034ed1b4a20d8fb9\")>\n\n    @pytest.mark.run(order=28)\n    # @pytest.mark.usefixtures(\"generate_program\")\n    @allure.title(\"在节目编排中，选择节目\")\n    def test_add_program(self, driver):\n        # ---------前提-----------------\n        # 后期优化：将这段代码作为fixture\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n        mediapage.refresh()\n        media_ids, folder_ids = media_list.get_media_list()\n        media_list.delete_all_media()\n        programlist = ProgramList()\n        program_names = programlist.get_program_list_names()\n        print(\"所有的节目名称:\", program_names)\n    \n        if not program_names:\n            # if media_ids is None:\n            # 素材上传\n            mediapage.refresh()\n            mediapage.switch_to_media_center()\n            mediapage.upload_media()\n            print(\"上传成功------------------\")\n            time.sleep(2)\n            # 素材发布\n            # media_ids, folder_ids = media_list.get_media_list()\n            mediapage.hover_to_media()\n            mediapage.choose_media()\n            mediapage.multi_release()\n            print(\"发布成功------------------\")\n        else:\n            # 清空所有的节目，然后再生成\n            media_list.delete_all_media()\n            mediapage.switch_to_media_center()\n            mediapage.upload_media()\n            time.sleep(2)\n            mediapage.hover_to_media()\n            mediapage.choose_media()\n            mediapage.multi_release()\n    \n        # ---------------前提-结束---------------\n    \n        release_page = self.release_page\n        release_page.refresh()\n        release_page.maxsize_window()\n    \n        program_page = ProgramPage(driver)\n        program_list_class = ProgramList()\n    \n        with step(\"切换到发布管理tab上\"):\n            release_page.switch_to_release_management()\n    \n        with step('点击节目编排'):\n            release_page.program_edit()\n    \n        with step(\"点击新增按钮\"):\n            release_page.click_add_program()\n    \n        # with step(\"通过接口，拿到节目列表中所有的节目名称\"):\n        #     program_list_all = program_list_class.get_program_list_names()\n        #     print(\"所有的节目名名称为\",program_list_all)\n        #     program_name = program_list_all[0]\n        #     print(\"拿到的第一个的节目名名称为\", program_name)\n        #     time.sleep(0.5)\n        with step(\"鼠标hover到一个节目上面\"):\n>           mediapage.hover_to_media()\n\ntest_case\\test_release_management.py:772: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:336: in hover_to_media\n    self.upload_media()\npageobject\\media_page.py:47: in upload_media\n    self.click_up_load()\npageobject\\media_page.py:106: in click_up_load\n    element = wait.until(EC.element_to_be_clickable((By.XPATH, my_element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c512ea95c333449034ed1b4a20d8fb9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001DF3E53BEB0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6214D78A2+54818]\nE       \t(No symbol) [0x00007FF621446AD2]\nE       \t(No symbol) [0x00007FF6212FDA3B]\nE       \t(No symbol) [0x00007FF62133E4FC]\nE       \t(No symbol) [0x00007FF62133E67C]\nE       \t(No symbol) [0x00007FF621379627]\nE       \t(No symbol) [0x00007FF62135EAEF]\nE       \t(No symbol) [0x00007FF6213775A2]\nE       \t(No symbol) [0x00007FF62135E883]\nE       \t(No symbol) [0x00007FF621333691]\nE       \t(No symbol) [0x00007FF6213348D4]\nE       \tGetHandleVerifier [0x00007FF62183B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF621891870+3962352]\nE       \tGetHandleVerifier [0x00007FF621889D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF621573656+693206]\nE       \t(No symbol) [0x00007FF621451638]\nE       \t(No symbol) [0x00007FF62144D944]\nE       \t(No symbol) [0x00007FF62144DA72]\nE       \t(No symbol) [0x00007FF62143E123]\nE       \tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\nE       \tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"_session_faker","time":{"start":1719813629704,"stop":1719813629881,"duration":177},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"env","time":{"start":1719813629881,"stop":1719813629882,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"driver","time":{"start":1719813629882,"stop":1719813662993,"duration":33111},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"release_page","time":{"start":1719813662993,"stop":1719813662993,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6214D78A2+54818]\n\t(No symbol) [0x00007FF621446AD2]\n\t(No symbol) [0x00007FF6212FDA3B]\n\t(No symbol) [0x00007FF62133E4FC]\n\t(No symbol) [0x00007FF62133E67C]\n\t(No symbol) [0x00007FF621379627]\n\t(No symbol) [0x00007FF62135EAEF]\n\t(No symbol) [0x00007FF6213775A2]\n\t(No symbol) [0x00007FF62135E883]\n\t(No symbol) [0x00007FF621333691]\n\t(No symbol) [0x00007FF6213348D4]\n\tGetHandleVerifier [0x00007FF62183B9A2+3610402]\n\tGetHandleVerifier [0x00007FF621891870+3962352]\n\tGetHandleVerifier [0x00007FF621889D5F+3930847]\n\tGetHandleVerifier [0x00007FF621573656+693206]\n\t(No symbol) [0x00007FF621451638]\n\t(No symbol) [0x00007FF62144D944]\n\t(No symbol) [0x00007FF62144DA72]\n\t(No symbol) [0x00007FF62143E123]\n\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\n\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]","statusTrace":"self = <pageobject.media_page.MediaPage object at 0x000001DF3DE63F70>\n\n    def hover_to_media(self):\n        \"\"\"\n        素材列表中，鼠标hover到素材遮罩上面去\n        \"\"\"\n        hover_locator = 'by_xpath,//div[@class=\"img-box\"]'\n        try:\n            eles = self.get_elements(hover_locator)\n>           first_ele = eles[0]\nE           IndexError: list index out of range\n\npageobject\\media_page.py:328: IndexError\n\nDuring handling of the above exception, another exception occurred:\n\nself = <test_case.test_release_management.TestReleaseStrategy object at 0x000001DF16288910>\ndriver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"4c512ea95c333449034ed1b4a20d8fb9\")>\n\n    @pytest.mark.run(order=28)\n    # @pytest.mark.usefixtures(\"generate_program\")\n    @allure.title(\"在节目编排中，选择节目\")\n    def test_add_program(self, driver):\n        # ---------前提-----------------\n        # 后期优化：将这段代码作为fixture\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n        mediapage.refresh()\n        media_ids, folder_ids = media_list.get_media_list()\n        media_list.delete_all_media()\n        programlist = ProgramList()\n        program_names = programlist.get_program_list_names()\n        print(\"所有的节目名称:\", program_names)\n    \n        if not program_names:\n            # if media_ids is None:\n            # 素材上传\n            mediapage.refresh()\n            mediapage.switch_to_media_center()\n            mediapage.upload_media()\n            print(\"上传成功------------------\")\n            time.sleep(2)\n            # 素材发布\n            # media_ids, folder_ids = media_list.get_media_list()\n            mediapage.hover_to_media()\n            mediapage.choose_media()\n            mediapage.multi_release()\n            print(\"发布成功------------------\")\n        else:\n            # 清空所有的节目，然后再生成\n            media_list.delete_all_media()\n            mediapage.switch_to_media_center()\n            mediapage.upload_media()\n            time.sleep(2)\n            mediapage.hover_to_media()\n            mediapage.choose_media()\n            mediapage.multi_release()\n    \n        # ---------------前提-结束---------------\n    \n        release_page = self.release_page\n        release_page.refresh()\n        release_page.maxsize_window()\n    \n        program_page = ProgramPage(driver)\n        program_list_class = ProgramList()\n    \n        with step(\"切换到发布管理tab上\"):\n            release_page.switch_to_release_management()\n    \n        with step('点击节目编排'):\n            release_page.program_edit()\n    \n        with step(\"点击新增按钮\"):\n            release_page.click_add_program()\n    \n        # with step(\"通过接口，拿到节目列表中所有的节目名称\"):\n        #     program_list_all = program_list_class.get_program_list_names()\n        #     print(\"所有的节目名名称为\",program_list_all)\n        #     program_name = program_list_all[0]\n        #     print(\"拿到的第一个的节目名名称为\", program_name)\n        #     time.sleep(0.5)\n        with step(\"鼠标hover到一个节目上面\"):\n>           mediapage.hover_to_media()\n\ntest_case\\test_release_management.py:772: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:336: in hover_to_media\n    self.upload_media()\npageobject\\media_page.py:47: in upload_media\n    self.click_up_load()\npageobject\\media_page.py:106: in click_up_load\n    element = wait.until(EC.element_to_be_clickable((By.XPATH, my_element)))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"4c512ea95c333449034ed1b4a20d8fb9\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000001DF3E53BEB0>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message: \nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6214D78A2+54818]\nE       \t(No symbol) [0x00007FF621446AD2]\nE       \t(No symbol) [0x00007FF6212FDA3B]\nE       \t(No symbol) [0x00007FF62133E4FC]\nE       \t(No symbol) [0x00007FF62133E67C]\nE       \t(No symbol) [0x00007FF621379627]\nE       \t(No symbol) [0x00007FF62135EAEF]\nE       \t(No symbol) [0x00007FF6213775A2]\nE       \t(No symbol) [0x00007FF62135E883]\nE       \t(No symbol) [0x00007FF621333691]\nE       \t(No symbol) [0x00007FF6213348D4]\nE       \tGetHandleVerifier [0x00007FF62183B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF621891870+3962352]\nE       \tGetHandleVerifier [0x00007FF621889D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF621573656+693206]\nE       \t(No symbol) [0x00007FF621451638]\nE       \t(No symbol) [0x00007FF62144D944]\nE       \t(No symbol) [0x00007FF62144DA72]\nE       \t(No symbol) [0x00007FF62143E123]\nE       \tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\nE       \tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[{"name":"点击上传按钮","time":{"start":1719813780239,"stop":1719813780874,"duration":635},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"进行文件上传","time":{"start":1719813780874,"stop":1719813787921,"duration":7047},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"当进度为100%时，则关闭上传弹框","time":{"start":1719813787921,"stop":1719813790014,"duration":2093},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"切换到发布管理tab上","time":{"start":1719813795598,"stop":1719813795680,"duration":82},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"点击节目编排","time":{"start":1719813795680,"stop":1719813796830,"duration":1150},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"点击新增按钮","time":{"start":1719813796830,"stop":1719813797432,"duration":602},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"鼠标hover到一个节目上面","time":{"start":1719813797432,"stop":1719813861061,"duration":63629},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6214D78A2+54818]\n\t(No symbol) [0x00007FF621446AD2]\n\t(No symbol) [0x00007FF6212FDA3B]\n\t(No symbol) [0x00007FF62133E4FC]\n\t(No symbol) [0x00007FF62133E67C]\n\t(No symbol) [0x00007FF621379627]\n\t(No symbol) [0x00007FF62135EAEF]\n\t(No symbol) [0x00007FF6213775A2]\n\t(No symbol) [0x00007FF62135E883]\n\t(No symbol) [0x00007FF621333691]\n\t(No symbol) [0x00007FF6213348D4]\n\tGetHandleVerifier [0x00007FF62183B9A2+3610402]\n\tGetHandleVerifier [0x00007FF621891870+3962352]\n\tGetHandleVerifier [0x00007FF621889D5F+3930847]\n\tGetHandleVerifier [0x00007FF621573656+693206]\n\t(No symbol) [0x00007FF621451638]\n\t(No symbol) [0x00007FF62144D944]\n\t(No symbol) [0x00007FF62144DA72]\n\t(No symbol) [0x00007FF62143E123]\n\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\n\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\n\n","statusTrace":"  File \"D:\\git\\ui_test\\test_case\\test_release_management.py\", line 772, in test_add_program\n    mediapage.hover_to_media()\n  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 336, in hover_to_media\n    self.upload_media()\n  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 47, in upload_media\n    self.click_up_load()\n  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 106, in click_up_load\n    element = wait.until(EC.element_to_be_clickable((By.XPATH, my_element)))\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[{"name":"点击上传按钮","time":{"start":1719813818341,"stop":1719813860934,"duration":42593},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \nStacktrace:\n\tGetHandleVerifier [0x00007FF6214D78A2+54818]\n\t(No symbol) [0x00007FF621446AD2]\n\t(No symbol) [0x00007FF6212FDA3B]\n\t(No symbol) [0x00007FF62133E4FC]\n\t(No symbol) [0x00007FF62133E67C]\n\t(No symbol) [0x00007FF621379627]\n\t(No symbol) [0x00007FF62135EAEF]\n\t(No symbol) [0x00007FF6213775A2]\n\t(No symbol) [0x00007FF62135E883]\n\t(No symbol) [0x00007FF621333691]\n\t(No symbol) [0x00007FF6213348D4]\n\tGetHandleVerifier [0x00007FF62183B9A2+3610402]\n\tGetHandleVerifier [0x00007FF621891870+3962352]\n\tGetHandleVerifier [0x00007FF621889D5F+3930847]\n\tGetHandleVerifier [0x00007FF621573656+693206]\n\t(No symbol) [0x00007FF621451638]\n\t(No symbol) [0x00007FF62144D944]\n\t(No symbol) [0x00007FF62144DA72]\n\t(No symbol) [0x00007FF62143E123]\n\tBaseThreadInitThunk [0x00007FFA3DBD257D+29]\n\tRtlUserThreadStart [0x00007FFA3E7AAF28+40]\n\n","statusTrace":"  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 47, in upload_media\n    self.click_up_load()\n  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 106, in click_up_load\n    element = wait.until(EC.element_to_be_clickable((By.XPATH, my_element)))\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":0,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":1,"hasContent":true}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"stepsCount":8,"hasContent":true},"afterStages":[{"name":"release_page::0","time":{"start":1719814215571,"stop":1719814215571,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false},{"name":"driver::0","time":{"start":1719814215580,"stop":1719814223793,"duration":8213},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"stepsCount":0,"hasContent":false}],"labels":[{"name":"feature","value":"release management"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"run(order=28)"},{"name":"tag","value":"@pytest.mark.usefixtures('release_page')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_release_management"},{"name":"subSuite","value":"TestReleaseStrategy"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"23148-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_release_management"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('release_page')","run(order=28)"]},"source":"a7dabd261eb37df6.json","parameterValues":[]}