{"name": "节目编排-选择节目-进行标签的展开", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-16da46f0=\"\" class=\"collapse\">...</div> is not clickable at point (612, 460). Other element would receive the click: <div data-v-f583ce0c=\"\" class=\"content\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6515F78A2+54818]\n\t(No symbol) [0x00007FF651566AD2]\n\t(No symbol) [0x00007FF65141DA3B]\n\t(No symbol) [0x00007FF6514647CB]\n\t(No symbol) [0x00007FF651462B99]\n\t(No symbol) [0x00007FF651460968]\n\t(No symbol) [0x00007FF65145FA23]\n\t(No symbol) [0x00007FF65145571F]\n\t(No symbol) [0x00007FF65147EAAA]\n\t(No symbol) [0x00007FF651455036]\n\t(No symbol) [0x00007FF65147ECC0]\n\t(No symbol) [0x00007FF6514975A2]\n\t(No symbol) [0x00007FF65147E883]\n\t(No symbol) [0x00007FF651453691]\n\t(No symbol) [0x00007FF6514548D4]\n\tGetHandleVerifier [0x00007FF65195B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6519B1870+3962352]\n\tGetHandleVerifier [0x00007FF6519A9D5F+3930847]\n\tGetHandleVerifier [0x00007FF651693656+693206]\n\t(No symbol) [0x00007FF651571638]\n\t(No symbol) [0x00007FF65156D944]\n\t(No symbol) [0x00007FF65156DA72]\n\t(No symbol) [0x00007FF65155E123]\n\tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\n\tRtlUserThreadStart [0x00007FFBD198AF28+40]", "trace": "self = <test_case.test_release_management.TestReleaseStrategy object at 0x0000020BD2C726B0>\n\n    @pytest.mark.run(order=41)\n    @allure.title(\"节目编排-选择节目-进行标签的展开\")\n    def test_expand_all_label(self):\n        release_page = self.release_page\n        release_page.refresh()\n    \n        with step(\"切换到发布管理tab页上\"):\n            release_page.switch_to_release_management()\n        time.sleep(0.5)\n        with step(\"打开节目编排弹框\"):\n            release_page.program_edit()\n    \n        with step(\"先点击折叠label按钮\"):\n>           release_page.collapse_edit_label()\n\ntest_case\\test_release_management.py:1166: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\release_page.py:694: in collapse_edit_label\n    self.click(collapse_locator)\nbasepage\\base_page.py:391: in click\n    element_to_click.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x0000020BFA85E560>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF65155E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFBD198AF28+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-16da46f0=\"\" class=\"collapse\">...</div> is not clickable at point (612, 460). Other element would receive the click: <div data-v-f583ce0c=\"\" class=\"content\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF6515F78A2+54818]\nE       \t(No symbol) [0x00007FF651566AD2]\nE       \t(No symbol) [0x00007FF65141DA3B]\nE       \t(No symbol) [0x00007FF6514647CB]\nE       \t(No symbol) [0x00007FF651462B99]\nE       \t(No symbol) [0x00007FF651460968]\nE       \t(No symbol) [0x00007FF65145FA23]\nE       \t(No symbol) [0x00007FF65145571F]\nE       \t(No symbol) [0x00007FF65147EAAA]\nE       \t(No symbol) [0x00007FF651455036]\nE       \t(No symbol) [0x00007FF65147ECC0]\nE       \t(No symbol) [0x00007FF6514975A2]\nE       \t(No symbol) [0x00007FF65147E883]\nE       \t(No symbol) [0x00007FF651453691]\nE       \t(No symbol) [0x00007FF6514548D4]\nE       \tGetHandleVerifier [0x00007FF65195B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF6519B1870+3962352]\nE       \tGetHandleVerifier [0x00007FF6519A9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF651693656+693206]\nE       \t(No symbol) [0x00007FF651571638]\nE       \t(No symbol) [0x00007FF65156D944]\nE       \t(No symbol) [0x00007FF65156DA72]\nE       \t(No symbol) [0x00007FF65155E123]\nE       \tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\nE       \tRtlUserThreadStart [0x00007FFBD198AF28+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException"}, "steps": [{"name": "切换到发布管理tab页上", "status": "passed", "start": 1721381046109, "stop": 1721381046207}, {"name": "打开节目编排弹框", "status": "passed", "start": 1721381046709, "stop": 1721381047805}, {"name": "先点击折叠label按钮", "status": "broken", "statusDetails": {"message": "selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-16da46f0=\"\" class=\"collapse\">...</div> is not clickable at point (612, 460). Other element would receive the click: <div data-v-f583ce0c=\"\" class=\"content\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF6515F78A2+54818]\n\t(No symbol) [0x00007FF651566AD2]\n\t(No symbol) [0x00007FF65141DA3B]\n\t(No symbol) [0x00007FF6514647CB]\n\t(No symbol) [0x00007FF651462B99]\n\t(No symbol) [0x00007FF651460968]\n\t(No symbol) [0x00007FF65145FA23]\n\t(No symbol) [0x00007FF65145571F]\n\t(No symbol) [0x00007FF65147EAAA]\n\t(No symbol) [0x00007FF651455036]\n\t(No symbol) [0x00007FF65147ECC0]\n\t(No symbol) [0x00007FF6514975A2]\n\t(No symbol) [0x00007FF65147E883]\n\t(No symbol) [0x00007FF651453691]\n\t(No symbol) [0x00007FF6514548D4]\n\tGetHandleVerifier [0x00007FF65195B9A2+3610402]\n\tGetHandleVerifier [0x00007FF6519B1870+3962352]\n\tGetHandleVerifier [0x00007FF6519A9D5F+3930847]\n\tGetHandleVerifier [0x00007FF651693656+693206]\n\t(No symbol) [0x00007FF651571638]\n\t(No symbol) [0x00007FF65156D944]\n\t(No symbol) [0x00007FF65156DA72]\n\t(No symbol) [0x00007FF65155E123]\n\tBaseThreadInitThunk [0x00007FFBCFE4257D+29]\n\tRtlUserThreadStart [0x00007FFBD198AF28+40]\n\n", "trace": "  File \"D:\\git\\ui_test\\test_case\\test_release_management.py\", line 1166, in test_expand_all_label\n    release_page.collapse_edit_label()\n  File \"D:\\git\\ui_test\\pageobject\\release_page.py\", line 694, in collapse_edit_label\n    self.click(collapse_locator)\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 391, in click\n    element_to_click.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n"}, "start": 1721381047805, "stop": 1721381049068}], "start": 1721381046032, "stop": 1721381049070, "uuid": "c9e426f1-8367-493c-b842-005c078da783", "historyId": "6656246468b260932ba851ea8cb493c0", "testCaseId": "6656246468b260932ba851ea8cb493c0", "fullName": "test_case.test_release_management.TestReleaseStrategy#test_expand_all_label", "labels": [{"name": "epic", "value": "项目hkc"}, {"name": "feature", "value": "release management"}, {"name": "tag", "value": "run(order=41)"}, {"name": "tag", "value": "@pytest.mark.usefixtures('release_page')"}, {"name": "parentSuite", "value": "test_case"}, {"name": "suite", "value": "test_release_management"}, {"name": "subSuite", "value": "TestReleaseStrategy"}, {"name": "host", "value": "hkc0208725"}, {"name": "thread", "value": "5340-MainThread"}, {"name": "framework", "value": "pytest"}, {"name": "language", "value": "cpython3"}, {"name": "package", "value": "test_case.test_release_management"}]}