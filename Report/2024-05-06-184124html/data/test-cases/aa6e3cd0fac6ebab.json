{"uid":"aa6e3cd0fac6ebab","name":"预览素材","fullName":"test_case.test_media_center.TestMediaCenter#test_delete_multi_file","historyId":"54bc23506364584991d03f5085bafab3","time":{"start":1714992855227,"stop":1714992884138,"duration":28911},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_case.test_media_center.TestMediaCenter object at 0x0000020373327370>\n\n    @pytest.mark.run(order=8)\n    @pytest.mark.usefixtures(\"media_set_up\")\n    @allure.title(\"预览素材\")\n    def test_delete_multi_file(self):\n        media_page = self.media_page\n        media_page.switch_to_media_center()\n        # 通用方法，进行素材上传\n        media_page.upload_media()\n        try:\n            with step(\"1、先鼠标hover到素材上面\"):\n                media_page.hover_to_media()\n    \n        except Exception:\n            media_page.upload_media()\n    \n        with step(\"点击预览按钮\"):\n>           media_page.media_preview()\n\ntest_case\\test_media_center.py:211: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:355: in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"47dd825978b7fbcaa8ed7fd4e3f09599\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002031BC91240>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"driver","time":{"start":1714992087297,"stop":1714992099981,"duration":12684},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"env","time":{"start":1714992087297,"stop":1714992087297,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"media_set_up","time":{"start":1714992853674,"stop":1714992855226,"duration":1552},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"media_page","time":{"start":1714992853674,"stop":1714992853674,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0}],"testStage":{"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message:","statusTrace":"self = <test_case.test_media_center.TestMediaCenter object at 0x0000020373327370>\n\n    @pytest.mark.run(order=8)\n    @pytest.mark.usefixtures(\"media_set_up\")\n    @allure.title(\"预览素材\")\n    def test_delete_multi_file(self):\n        media_page = self.media_page\n        media_page.switch_to_media_center()\n        # 通用方法，进行素材上传\n        media_page.upload_media()\n        try:\n            with step(\"1、先鼠标hover到素材上面\"):\n                media_page.hover_to_media()\n    \n        except Exception:\n            media_page.upload_media()\n    \n        with step(\"点击预览按钮\"):\n>           media_page.media_preview()\n\ntest_case\\test_media_center.py:211: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:355: in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.support.wait.WebDriverWait (session=\"47dd825978b7fbcaa8ed7fd4e3f09599\")>\nmethod = <function element_to_be_clickable.<locals>._predicate at 0x000002031BC91240>\nmessage = ''\n\n    def until(self, method: Callable[[D], Union[Literal[False], T]], message: str = \"\") -> T:\n        \"\"\"Calls the method provided with the driver as an argument until the \\\n        return value does not evaluate to ``False``.\n    \n        :param method: callable(WebDriver)\n        :param message: optional message for :exc:`TimeoutException`\n        :returns: the result of the last call to `method`\n        :raises: :exc:`selenium.common.exceptions.TimeoutException` if timeout occurs\n        \"\"\"\n        screen = None\n        stacktrace = None\n    \n        end_time = time.monotonic() + self._timeout\n        while True:\n            try:\n                value = method(self._driver)\n                if value:\n                    return value\n            except self._ignored_exceptions as exc:\n                screen = getattr(exc, \"screen\", None)\n                stacktrace = getattr(exc, \"stacktrace\", None)\n            time.sleep(self._poll)\n            if time.monotonic() > end_time:\n                break\n>       raise TimeoutException(message, screen, stacktrace)\nE       selenium.common.exceptions.TimeoutException: Message:\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py:105: TimeoutException","steps":[{"name":"点击上传按钮","time":{"start":1714992855784,"stop":1714992857090,"duration":1306},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"进行文件上传","time":{"start":1714992857090,"stop":1714992864699,"duration":7609},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"当进度为100%时，则关闭上传弹框","time":{"start":1714992864699,"stop":1714992867855,"duration":3156},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"1、先鼠标hover到素材上面","time":{"start":1714992867855,"stop":1714992873110,"duration":5255},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"点击预览按钮","time":{"start":1714992873110,"stop":1714992884138,"duration":11028},"status":"broken","statusMessage":"selenium.common.exceptions.TimeoutException: Message: \n\n","statusTrace":"  File \"D:\\ui\\test_case\\test_media_center.py\", line 211, in test_delete_multi_file\n    media_page.media_preview()\n  File \"D:\\ui\\pageobject\\media_page.py\", line 355, in media_preview\n    click_element = wait.until(EC.element_to_be_clickable((By.XPATH, '//div[@class=\"mask\"]/img')))\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\support\\wait.py\", line 105, in until\n    raise TimeoutException(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":5},"afterStages":[{"name":"media_page::0","time":{"start":1714992884173,"stop":1714992884173,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":false,"attachmentsCount":0,"hasContent":false,"stepsCount":0},{"name":"driver::0","time":{"start":1714992971911,"stop":1714992971911,"duration":0},"status":"broken","statusMessage":"pymysql.err.OperationalError: (2003, \"Can't connect to MySQL server on 'rm-wz9vq722u8axcvo06oo.mysql.rds.aliyuncs.com' ([Errno 11001] getaddrinfo failed)\")\n","statusTrace":"  File \"D:\\sw_install\\python-install\\lib\\site-packages\\allure_commons\\_allure.py\", line 221, in __call__\n    return self._fixture_function(*args, **kwargs)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 918, in _teardown_yield_fixture\n    next(it)\n  File \"D:\\ui\\conftest.py\", line 36, in driver\n    sql_execute()\n  File \"D:\\ui\\data_clean.py\", line 8, in sql_execute\n    connection = pymysql.connect(host=host, port=3391, user='hkc_cv_user', password='Hkc285$$', database='hkc_cv')\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pymysql\\connections.py\", line 358, in __init__\n    self.connect()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pymysql\\connections.py\", line 711, in connect\n    raise exc\n","steps":[],"attachments":[],"parameters":[],"shouldDisplayMessage":true,"attachmentsCount":0,"hasContent":true,"stepsCount":0}],"labels":[{"name":"feature","value":"media center"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"@pytest.mark.usefixtures('media_set_up')"},{"name":"tag","value":"run(order=8)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_media_center"},{"name":"subSuite","value":"TestMediaCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"26752-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_media_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["@pytest.mark.usefixtures('media_set_up')","run(order=8)"]},"source":"aa6e3cd0fac6ebab.json","parameterValues":[]}