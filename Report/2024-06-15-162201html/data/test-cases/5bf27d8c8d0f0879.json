{"uid":"5bf27d8c8d0f0879","name":"取消节目单失效","fullName":"test_case.test_play_bill.TestPlayBill#test_cancel_expiry_play_bill","historyId":"b88355229981ee225e20f37442cc9ec8","time":{"start":1718440037963,"stop":1718440037963,"duration":0},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-72604ddf=\"\" class=\"menu-item\">...</div> is not clickable at point (60, 215). Other element would receive the click: <div class=\"el-overlay\" style=\"z-index: 2014;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7313178A2+54818]\n\t(No symbol) [0x00007FF731286AD2]\n\t(No symbol) [0x00007FF73113DA3B]\n\t(No symbol) [0x00007FF7311847CB]\n\t(No symbol) [0x00007FF731182B99]\n\t(No symbol) [0x00007FF731180968]\n\t(No symbol) [0x00007FF73117FA23]\n\t(No symbol) [0x00007FF73117571F]\n\t(No symbol) [0x00007FF73119EAAA]\n\t(No symbol) [0x00007FF731175036]\n\t(No symbol) [0x00007FF73119ECC0]\n\t(No symbol) [0x00007FF7311B75A2]\n\t(No symbol) [0x00007FF73119E883]\n\t(No symbol) [0x00007FF731173691]\n\t(No symbol) [0x00007FF7311748D4]\n\tGetHandleVerifier [0x00007FF73167B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7316D1870+3962352]\n\tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7313B3656+693206]\n\t(No symbol) [0x00007FF731291638]\n\t(No symbol) [0x00007FF73128D944]\n\t(No symbol) [0x00007FF73128DA72]\n\t(No symbol) [0x00007FF73127E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]","statusTrace":"driver = <selenium.webdriver.chrome.webdriver.WebDriver (session=\"8cc53928d02970f9b4c881617213877a\")>\nrelease_page = <pageobject.release_page.ReleasePage object at 0x000001C4FBE90E50>\n\n    @pytest.fixture(scope=\"function\")\n    def generate_one_program(driver,release_page):\n        \"\"\"\n        1、判断素材中心是不是有素材，有就先清空，再上传，再生成节目\n        2、没有就直接上传，再生成节目\n        :return:\n        \"\"\"\n    \n        media_list = MediaList()\n        mediapage = MediaPage(driver)\n        media_ids, folder_ids = media_list.get_media_list()\n        programlist = ProgramList()\n        program_names = programlist.get_program_list_names()\n    \n        if program_names == []:\n            if media_ids == []:\n                # 素材上传\n                time.sleep(0.3)\n                mediapage.refresh()\n                mediapage.switch_to_media_center()\n                mediapage.upload_media()\n                time.sleep(2)\n                # 素材发布\n                # media_ids, folder_ids = media_list.get_media_list()\n                mediapage.hover_to_media()\n                mediapage.choose_media()\n                mediapage.multi_release()\n                #选择设备，然后发布节目\n    \n                with step(\"点击选设备\"):\n                    release_page.choose_terminal()\n    \n                with step(\"选择一个设备\"):\n                    # release_page.choose_one_terminal()\n    \n                    # release_page.choose_terminal()\n                    release_page.select_all_terminals()\n                    # release_page.confirm_terminal_button()\n                    # release_page.click_system_icon()\n    \n                    time.sleep(6)\n                with step(\"选完设备后，点击确定\"):\n                    # release_page.confirm_release_strategy()\n                    release_page.confirm_terminal_button()\n                    release_page.click_system_icon()\n    \n                with step(\"发布普通节目\"):\n                    release_page.release_general_program()\n    \n            else:\n                media_list.delete_all_media()\n>               mediapage.switch_to_media_center()\n\ntest_case\\test_play_bill.py:160: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\npageobject\\media_page.py:31: in switch_to_media_center\n    self.click(media_center_locator)\nbasepage\\base_page.py:389: in click\n    element_to_click.click()\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:94: in click\n    self._execute(Command.CLICK_ELEMENT)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py:395: in _execute\n    return self._parent.execute(command, params)\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py:348: in execute\n    self.error_handler.check_response(response)\n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <selenium.webdriver.remote.errorhandler.ErrorHandler object at 0x000001C4FAA7FAC0>\nresponse = {'status': 400, 'value': '{\"value\":{\"error\":\"element click intercepted\",\"message\":\"element click intercepted: Element ...07FF73127E123]\\\\n\\\\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\\\\n\\\\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\\\\n\"}}'}\n\n    def check_response(self, response: Dict[str, Any]) -> None:\n        \"\"\"Checks that a JSON response from the WebDriver does not have an\n        error.\n    \n        :Args:\n         - response - The JSON response from the WebDriver server as a dictionary\n           object.\n    \n        :Raises: If the response contains an error message.\n        \"\"\"\n        status = response.get(\"status\", None)\n        if not status or status == ErrorCode.SUCCESS:\n            return\n        value = None\n        message = response.get(\"message\", \"\")\n        screen: str = response.get(\"screen\", \"\")\n        stacktrace = None\n        if isinstance(status, int):\n            value_json = response.get(\"value\", None)\n            if value_json and isinstance(value_json, str):\n                import json\n    \n                try:\n                    value = json.loads(value_json)\n                    if len(value) == 1:\n                        value = value[\"value\"]\n                    status = value.get(\"error\", None)\n                    if not status:\n                        status = value.get(\"status\", ErrorCode.UNKNOWN_ERROR)\n                        message = value.get(\"value\") or value.get(\"message\")\n                        if not isinstance(message, str):\n                            value = message\n                            message = message.get(\"message\")\n                    else:\n                        message = value.get(\"message\", None)\n                except ValueError:\n                    pass\n    \n        exception_class: Type[WebDriverException]\n        e = ErrorCode()\n        error_codes = [item for item in dir(e) if not item.startswith(\"__\")]\n        for error_code in error_codes:\n            error_info = getattr(ErrorCode, error_code)\n            if isinstance(error_info, list) and status in error_info:\n                exception_class = getattr(ExceptionMapping, error_code, WebDriverException)\n                break\n        else:\n            exception_class = WebDriverException\n    \n        if not value:\n            value = response[\"value\"]\n        if isinstance(value, str):\n            raise exception_class(value)\n        if message == \"\" and \"message\" in value:\n            message = value[\"message\"]\n    \n        screen = None  # type: ignore[assignment]\n        if \"screen\" in value:\n            screen = value[\"screen\"]\n    \n        stacktrace = None\n        st_value = value.get(\"stackTrace\") or value.get(\"stacktrace\")\n        if st_value:\n            if isinstance(st_value, str):\n                stacktrace = st_value.split(\"\\n\")\n            else:\n                stacktrace = []\n                try:\n                    for frame in st_value:\n                        line = frame.get(\"lineNumber\", \"\")\n                        file = frame.get(\"fileName\", \"<anonymous>\")\n                        if line:\n                            file = f\"{file}:{line}\"\n                        meth = frame.get(\"methodName\", \"<anonymous>\")\n                        if \"className\" in frame:\n                            meth = f\"{frame['className']}.{meth}\"\n                        msg = \"    at %s (%s)\"\n                        msg = msg % (meth, file)\n                        stacktrace.append(msg)\n                except TypeError:\n                    pass\n        if exception_class == UnexpectedAlertPresentException:\n            alert_text = None\n            if \"data\" in value:\n                alert_text = value[\"data\"].get(\"text\")\n            elif \"alert\" in value:\n                alert_text = value[\"alert\"].get(\"text\")\n            raise exception_class(message, screen, stacktrace, alert_text)  # type: ignore[call-arg]  # mypy is not smart enough here\n>       raise exception_class(message, screen, stacktrace)\nE       selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-72604ddf=\"\" class=\"menu-item\">...</div> is not clickable at point (60, 215). Other element would receive the click: <div class=\"el-overlay\" style=\"z-index: 2014;\">...</div>\nE         (Session info: chrome=118.0.5993.118)\nE       Stacktrace:\nE       \tGetHandleVerifier [0x00007FF7313178A2+54818]\nE       \t(No symbol) [0x00007FF731286AD2]\nE       \t(No symbol) [0x00007FF73113DA3B]\nE       \t(No symbol) [0x00007FF7311847CB]\nE       \t(No symbol) [0x00007FF731182B99]\nE       \t(No symbol) [0x00007FF731180968]\nE       \t(No symbol) [0x00007FF73117FA23]\nE       \t(No symbol) [0x00007FF73117571F]\nE       \t(No symbol) [0x00007FF73119EAAA]\nE       \t(No symbol) [0x00007FF731175036]\nE       \t(No symbol) [0x00007FF73119ECC0]\nE       \t(No symbol) [0x00007FF7311B75A2]\nE       \t(No symbol) [0x00007FF73119E883]\nE       \t(No symbol) [0x00007FF731173691]\nE       \t(No symbol) [0x00007FF7311748D4]\nE       \tGetHandleVerifier [0x00007FF73167B9A2+3610402]\nE       \tGetHandleVerifier [0x00007FF7316D1870+3962352]\nE       \tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\nE       \tGetHandleVerifier [0x00007FF7313B3656+693206]\nE       \t(No symbol) [0x00007FF731291638]\nE       \t(No symbol) [0x00007FF73128D944]\nE       \t(No symbol) [0x00007FF73128DA72]\nE       \t(No symbol) [0x00007FF73127E123]\nE       \tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\nE       \tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\nD:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py:229: ElementClickInterceptedException","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1718439726244,"stop":1718439726245,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1718439726245,"stop":1718439736255,"duration":10010},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver","time":{"start":1718439988993,"stop":1718439994072,"duration":5079},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"release_page","time":{"start":1718439994072,"stop":1718439994072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"play_bill_page","time":{"start":1718439994072,"stop":1718439994072,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"init_play_bill","time":{"start":1718439994073,"stop":1718439994662,"duration":589},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"generate_one_program","time":{"start":1718440037963,"stop":1718440040039,"duration":2076},"status":"broken","statusMessage":"selenium.common.exceptions.ElementClickInterceptedException: Message: element click intercepted: Element <div data-v-72604ddf=\"\" class=\"menu-item\">...</div> is not clickable at point (60, 215). Other element would receive the click: <div class=\"el-overlay\" style=\"z-index: 2014;\">...</div>\n  (Session info: chrome=118.0.5993.118)\nStacktrace:\n\tGetHandleVerifier [0x00007FF7313178A2+54818]\n\t(No symbol) [0x00007FF731286AD2]\n\t(No symbol) [0x00007FF73113DA3B]\n\t(No symbol) [0x00007FF7311847CB]\n\t(No symbol) [0x00007FF731182B99]\n\t(No symbol) [0x00007FF731180968]\n\t(No symbol) [0x00007FF73117FA23]\n\t(No symbol) [0x00007FF73117571F]\n\t(No symbol) [0x00007FF73119EAAA]\n\t(No symbol) [0x00007FF731175036]\n\t(No symbol) [0x00007FF73119ECC0]\n\t(No symbol) [0x00007FF7311B75A2]\n\t(No symbol) [0x00007FF73119E883]\n\t(No symbol) [0x00007FF731173691]\n\t(No symbol) [0x00007FF7311748D4]\n\tGetHandleVerifier [0x00007FF73167B9A2+3610402]\n\tGetHandleVerifier [0x00007FF7316D1870+3962352]\n\tGetHandleVerifier [0x00007FF7316C9D5F+3930847]\n\tGetHandleVerifier [0x00007FF7313B3656+693206]\n\t(No symbol) [0x00007FF731291638]\n\t(No symbol) [0x00007FF73128D944]\n\t(No symbol) [0x00007FF73128DA72]\n\t(No symbol) [0x00007FF73127E123]\n\tBaseThreadInitThunk [0x00007FFF5C2B257D+29]\n\tRtlUserThreadStart [0x00007FFF5CCCAA48+40]\n\n","statusTrace":"  File \"D:\\sw_install\\python-install\\lib\\site-packages\\pluggy\\_callers.py\", line 77, in _multicall\n    res = hook_impl.function(*args)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 1130, in pytest_fixture_setup\n    result = call_fixture_func(fixturefunc, request, kwargs)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\_pytest\\fixtures.py\", line 909, in call_fixture_func\n    fixture_result = fixturefunc(**kwargs)\n  File \"D:\\git\\ui_test\\test_case\\test_play_bill.py\", line 160, in generate_one_program\n    mediapage.switch_to_media_center()\n  File \"D:\\git\\ui_test\\pageobject\\media_page.py\", line 31, in switch_to_media_center\n    self.click(media_center_locator)\n  File \"D:\\git\\ui_test\\basepage\\base_page.py\", line 389, in click\n    element_to_click.click()\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 94, in click\n    self._execute(Command.CLICK_ELEMENT)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webelement.py\", line 395, in _execute\n    return self._parent.execute(command, params)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\webdriver.py\", line 348, in execute\n    self.error_handler.check_response(response)\n  File \"D:\\sw_install\\python-install\\lib\\site-packages\\selenium\\webdriver\\remote\\errorhandler.py\", line 229, in check_response\n    raise exception_class(message, screen, stacktrace)\n","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":true,"hasContent":true,"stepsCount":0}],"afterStages":[{"name":"play_bill_page::0","time":{"start":1718440050816,"stop":1718440051003,"duration":187},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"release_page::0","time":{"start":1718440051010,"stop":1718440051010,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver::0","time":{"start":1718440102854,"stop":1718440107339,"duration":4485},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0},{"name":"driver::0","time":{"start":1718440107350,"stop":1718440112313,"duration":4963},"status":"passed","steps":[],"attachments":[],"parameters":[],"attachmentsCount":0,"shouldDisplayMessage":false,"hasContent":false,"stepsCount":0}],"labels":[{"name":"feature","value":"play bill list"},{"name":"epic","value":"项目hkc"},{"name":"tag","value":"@pytest.mark.usefixtures('generate_one_program')"},{"name":"tag","value":"run(order=7)"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_play_bill"},{"name":"subSuite","value":"TestPlayBill"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"36532-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_play_bill"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Test defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=7)","@pytest.mark.usefixtures('generate_one_program')"]},"source":"5bf27d8c8d0f0879.json","parameterValues":[]}