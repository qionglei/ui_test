{"uid":"33b804cd098f3292","name":"在设备中心，点击更多按钮","fullName":"test_case.test_terminal_center.TestTerminalCenter#test_click_more_button","historyId":"d8d547a9388ee1e0e9d9e0c52a5a5d7c","time":{"start":1714979594082,"stop":1714979653427,"duration":59345},"status":"failed","statusMessage":"AssertionError: assert '关机' in []","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000018D534F73A0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"在设备中心，点击更多按钮\")\n    @pytest.mark.run(order=2)\n    def test_click_more_button(self):\n        terminal_page = self.terminal_page\n        # terminal_page.switch_to_terminal_center()\n        # sql_execute()\n        terminal_page.refresh()\n        time.sleep(0.5)\n        terminal_page.add_new_terminal()\n        # all_terminal_ids = terminal_page.all_terminal_ids()\n    \n        with step(\"点击更多按钮\"):\n            terminal_page.click_more_button()\n        all_func = terminal_page.more_function()\n        print(\"获取；\", all_func)\n        all_fixed_functions = [\"关机\", \"重启\", \"播放\", \"停止\", \"插播字幕\", \"节目克隆\"]\n        try:\n            for fixed_function in all_fixed_functions:\n                assert fixed_function in all_func\n        except AssertionError as e:\n>           raise e\n\ntest_case\\test_terminal_center.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000018D534F73A0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"在设备中心，点击更多按钮\")\n    @pytest.mark.run(order=2)\n    def test_click_more_button(self):\n        terminal_page = self.terminal_page\n        # terminal_page.switch_to_terminal_center()\n        # sql_execute()\n        terminal_page.refresh()\n        time.sleep(0.5)\n        terminal_page.add_new_terminal()\n        # all_terminal_ids = terminal_page.all_terminal_ids()\n    \n        with step(\"点击更多按钮\"):\n            terminal_page.click_more_button()\n        all_func = terminal_page.more_function()\n        print(\"获取；\", all_func)\n        all_fixed_functions = [\"关机\", \"重启\", \"播放\", \"停止\", \"插播字幕\", \"节目克隆\"]\n        try:\n            for fixed_function in all_fixed_functions:\n>               assert fixed_function in all_func\nE               AssertionError: assert '关机' in []\n\ntest_case\\test_terminal_center.py:134: AssertionError","flaky":false,"newFailed":false,"newBroken":false,"newPassed":false,"retriesCount":0,"retriesStatusChange":false,"beforeStages":[{"name":"env","time":{"start":1714979310151,"stop":1714979310152,"duration":1},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver","time":{"start":1714979310152,"stop":1714979319109,"duration":8957},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"set_up_org","time":{"start":1714979593316,"stop":1714979593723,"duration":407},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"clear_terminal_list","time":{"start":1714979593723,"stop":1714979594082,"duration":359},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"sys_page","time":{"start":1714979593723,"stop":1714979593723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"terminal_page","time":{"start":1714979593723,"stop":1714979593723,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"testStage":{"status":"failed","statusMessage":"AssertionError: assert '关机' in []","statusTrace":"self = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000018D534F73A0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"在设备中心，点击更多按钮\")\n    @pytest.mark.run(order=2)\n    def test_click_more_button(self):\n        terminal_page = self.terminal_page\n        # terminal_page.switch_to_terminal_center()\n        # sql_execute()\n        terminal_page.refresh()\n        time.sleep(0.5)\n        terminal_page.add_new_terminal()\n        # all_terminal_ids = terminal_page.all_terminal_ids()\n    \n        with step(\"点击更多按钮\"):\n            terminal_page.click_more_button()\n        all_func = terminal_page.more_function()\n        print(\"获取；\", all_func)\n        all_fixed_functions = [\"关机\", \"重启\", \"播放\", \"停止\", \"插播字幕\", \"节目克隆\"]\n        try:\n            for fixed_function in all_fixed_functions:\n                assert fixed_function in all_func\n        except AssertionError as e:\n>           raise e\n\ntest_case\\test_terminal_center.py:136: \n_ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _ _\n\nself = <test_case.test_terminal_center.TestTerminalCenter object at 0x0000018D534F73A0>\n\n    @pytest.mark.usefixtures('clear_terminal_list')\n    @allure.title(\"在设备中心，点击更多按钮\")\n    @pytest.mark.run(order=2)\n    def test_click_more_button(self):\n        terminal_page = self.terminal_page\n        # terminal_page.switch_to_terminal_center()\n        # sql_execute()\n        terminal_page.refresh()\n        time.sleep(0.5)\n        terminal_page.add_new_terminal()\n        # all_terminal_ids = terminal_page.all_terminal_ids()\n    \n        with step(\"点击更多按钮\"):\n            terminal_page.click_more_button()\n        all_func = terminal_page.more_function()\n        print(\"获取；\", all_func)\n        all_fixed_functions = [\"关机\", \"重启\", \"播放\", \"停止\", \"插播字幕\", \"节目克隆\"]\n        try:\n            for fixed_function in all_fixed_functions:\n>               assert fixed_function in all_func\nE               AssertionError: assert '关机' in []\n\ntest_case\\test_terminal_center.py:134: AssertionError","steps":[{"name":"点击更多按钮","time":{"start":1714979650899,"stop":1714979651501,"duration":602},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"attachments":[],"parameters":[],"hasContent":true,"stepsCount":1,"shouldDisplayMessage":true,"attachmentsCount":0},"afterStages":[{"name":"sys_page::0","time":{"start":1714979653474,"stop":1714979653474,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"terminal_page::0","time":{"start":1714979653474,"stop":1714979653474,"duration":0},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0},{"name":"driver::0","time":{"start":1714980698700,"stop":1714980702521,"duration":3821},"status":"passed","steps":[],"attachments":[],"parameters":[],"hasContent":false,"stepsCount":0,"shouldDisplayMessage":false,"attachmentsCount":0}],"labels":[{"name":"epic","value":"项目hkc"},{"name":"feature","value":"terminal_center"},{"name":"tag","value":"run(order=2)"},{"name":"tag","value":"@pytest.mark.usefixtures('clear_terminal_list')"},{"name":"parentSuite","value":"test_case"},{"name":"suite","value":"test_terminal_center"},{"name":"subSuite","value":"TestTerminalCenter"},{"name":"host","value":"hkc0208725"},{"name":"thread","value":"35244-MainThread"},{"name":"framework","value":"pytest"},{"name":"language","value":"cpython3"},{"name":"package","value":"test_case.test_terminal_center"},{"name":"resultFormat","value":"allure2"}],"parameters":[],"links":[],"hidden":false,"retry":false,"extra":{"severity":"normal","retries":[],"categories":[{"name":"Product defects","matchedStatuses":[],"flaky":false}],"tags":["run(order=2)","@pytest.mark.usefixtures('clear_terminal_list')"]},"source":"33b804cd098f3292.json","parameterValues":[]}